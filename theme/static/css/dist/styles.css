/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-red-950: oklch(25.8% 0.092 26.042);
    --color-amber-50: oklch(98.7% 0.022 95.277);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-sky-800: oklch(44.3% 0.11 240.79);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-sky-950: oklch(29.3% 0.066 243.157);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-slate-50: oklch(98.4% 0.003 247.858);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-slate-950: oklch(12.9% 0.042 264.695);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-md: 28rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-5xl: 64rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --leading-normal: 1.5;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset: calc(0.25rem * 0);
    margin: calc(0.25rem * 0);
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    align-items: center;
    justify-items: center;
    background-color: transparent;
    padding: calc(0.25rem * 0);
    color: inherit;
    overflow-x: hidden;
    transition: translate 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
    overflow-y: hidden;
    overscroll-behavior: contain;
    z-index: 999;
  }
  .modal::backdrop {
    display: none;
  }
  .modal.modal-open, .modal[open], .modal:target {
    pointer-events: auto;
    visibility: visible;
    opacity: 100%;
    background-color: oklch(0% 0 0/ 0.4);
  }
  .modal.modal-open .modal-box, .modal[open] .modal-box, .modal:target .modal-box {
    translate: 0 0;
    scale: 1;
    opacity: 1;
  }
  @starting-style {
    .modal.modal-open, .modal[open], .modal:target {
      visibility: hidden;
      opacity: 0%;
    }
  }
  .modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset: calc(0.25rem * 0);
    margin: calc(0.25rem * 0);
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    align-items: center;
    justify-items: center;
    background-color: transparent;
    padding: calc(0.25rem * 0);
    color: inherit;
    overflow-x: hidden;
    transition: translate 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
    overflow-y: hidden;
    overscroll-behavior: contain;
    z-index: 999;
  }
  .modal::backdrop {
    display: none;
  }
  .modal.modal-open, .modal[open], .modal:target {
    pointer-events: auto;
    visibility: visible;
    opacity: 100%;
    background-color: oklch(0% 0 0/ 0.4);
  }
  .modal.modal-open .modal-box, .modal[open] .modal-box, .modal:target .modal-box {
    translate: 0 0;
    scale: 1;
    opacity: 1;
  }
  @starting-style {
    .modal.modal-open, .modal[open], .modal:target {
      visibility: hidden;
      opacity: 0%;
    }
  }
  .drawer-side {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset-inline-start: calc(0.25rem * 0);
    top: calc(0.25rem * 0);
    z-index: 1;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    width: 100%;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr));
    align-items: flex-start;
    justify-items: start;
    overflow-x: hidden;
    overflow-y: hidden;
    overscroll-behavior: contain;
    opacity: 0%;
    transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
    height: 100vh;
    height: 100dvh;
  }
  .drawer-side > .drawer-overlay {
    position: sticky;
    top: calc(0.25rem * 0);
    cursor: pointer;
    place-self: stretch;
    background-color: oklch(0% 0 0 / 40%);
  }
  .drawer-side > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .drawer-side > *:not(.drawer-overlay) {
    will-change: transform;
    transition: translate 0.3s ease-out;
    translate: -100%;
  }
  [dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
    translate: 100%;
  }
  .drawer-side {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset-inline-start: calc(0.25rem * 0);
    top: calc(0.25rem * 0);
    z-index: 1;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    width: 100%;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr));
    align-items: flex-start;
    justify-items: start;
    overflow-x: hidden;
    overflow-y: hidden;
    overscroll-behavior: contain;
    opacity: 0%;
    transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
    height: 100vh;
    height: 100dvh;
  }
  .drawer-side > .drawer-overlay {
    position: sticky;
    top: calc(0.25rem * 0);
    cursor: pointer;
    place-self: stretch;
    background-color: oklch(0% 0 0 / 40%);
  }
  .drawer-side > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .drawer-side > *:not(.drawer-overlay) {
    will-change: transform;
    transition: translate 0.3s ease-out;
    translate: -100%;
  }
  [dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
    translate: 100%;
  }
  .drawer-toggle {
    position: fixed;
    height: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    appearance: none;
    opacity: 0%;
  }
  .drawer-toggle:checked ~ .drawer-side {
    pointer-events: auto;
    visibility: visible;
    overflow-y: auto;
    opacity: 100%;
  }
  .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
    translate: 0%;
  }
  .drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
    outline: 2px solid;
    outline-offset: 2px;
  }
  .drawer-toggle {
    position: fixed;
    height: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    appearance: none;
    opacity: 0%;
  }
  .drawer-toggle:checked ~ .drawer-side {
    pointer-events: auto;
    visibility: visible;
    overflow-y: auto;
    opacity: 100%;
  }
  .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
    translate: 0%;
  }
  .drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
    outline: 2px solid;
    outline-offset: 2px;
  }
  .tooltip {
    position: relative;
    display: inline-block;
    --tt-bg: var(--color-neutral);
    --tt-off: calc(100% + 0.5rem);
    --tt-tail: calc(100% + 1px + 0.25rem);
  }
  .tooltip > :where(.tooltip-content), .tooltip:where([data-tip]):before {
    position: absolute;
    max-width: 20rem;
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 2);
    padding-block: calc(0.25rem * 1);
    text-align: center;
    white-space: normal;
    color: var(--color-neutral-content);
    opacity: 0%;
    font-size: 0.875rem;
    line-height: 1.25;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    background-color: var(--tt-bg);
    width: max-content;
    pointer-events: none;
    z-index: 2;
    --tw-content: attr(data-tip);
    content: var(--tw-content);
  }
  .tooltip:after {
    position: absolute;
    position: absolute;
    opacity: 0%;
    background-color: var(--tt-bg);
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    content: "";
    pointer-events: none;
    width: 0.625rem;
    height: 0.25rem;
    display: block;
    mask-repeat: no-repeat;
    mask-position: -1px 0;
    --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
    mask-image: var(--mask-tooltip);
  }
  .tooltip.tooltip-open > .tooltip-content, .tooltip.tooltip-open[data-tip]:before, .tooltip.tooltip-open:after, .tooltip[data-tip]:not([data-tip=""]):hover > .tooltip-content, .tooltip[data-tip]:not([data-tip=""]):hover[data-tip]:before, .tooltip[data-tip]:not([data-tip=""]):hover:after, .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover > .tooltip-content, .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover[data-tip]:before, .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover:after, .tooltip:has(:focus-visible) > .tooltip-content, .tooltip:has(:focus-visible)[data-tip]:before, .tooltip:has(:focus-visible):after {
    opacity: 100%;
    --tt-pos: 0rem;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  }
  .tooltip > .tooltip-content, .tooltip[data-tip]:before {
    transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-off) 50%;
  }
  .tooltip:after {
    transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-tail) 50%;
  }
  .tooltip {
    position: relative;
    display: inline-block;
    --tt-bg: var(--color-neutral);
    --tt-off: calc(100% + 0.5rem);
    --tt-tail: calc(100% + 1px + 0.25rem);
  }
  .tooltip > :where(.tooltip-content), .tooltip:where([data-tip]):before {
    position: absolute;
    max-width: 20rem;
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 2);
    padding-block: calc(0.25rem * 1);
    text-align: center;
    white-space: normal;
    color: var(--color-neutral-content);
    opacity: 0%;
    font-size: 0.875rem;
    line-height: 1.25;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    background-color: var(--tt-bg);
    width: max-content;
    pointer-events: none;
    z-index: 2;
    --tw-content: attr(data-tip);
    content: var(--tw-content);
  }
  .tooltip:after {
    position: absolute;
    position: absolute;
    opacity: 0%;
    background-color: var(--tt-bg);
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    content: "";
    pointer-events: none;
    width: 0.625rem;
    height: 0.25rem;
    display: block;
    mask-repeat: no-repeat;
    mask-position: -1px 0;
    --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
    mask-image: var(--mask-tooltip);
  }
  .tooltip.tooltip-open > .tooltip-content, .tooltip.tooltip-open[data-tip]:before, .tooltip.tooltip-open:after, .tooltip[data-tip]:not([data-tip=""]):hover > .tooltip-content, .tooltip[data-tip]:not([data-tip=""]):hover[data-tip]:before, .tooltip[data-tip]:not([data-tip=""]):hover:after, .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover > .tooltip-content, .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover[data-tip]:before, .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover:after, .tooltip:has(:focus-visible) > .tooltip-content, .tooltip:has(:focus-visible)[data-tip]:before, .tooltip:has(:focus-visible):after {
    opacity: 100%;
    --tt-pos: 0rem;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  }
  .tooltip > .tooltip-content, .tooltip[data-tip]:before {
    transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-off) 50%;
  }
  .tooltip:after {
    transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-tail) 50%;
  }
  .tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    webkit-user-select: none;
    user-select: none;
  }
  @media (hover: hover) {
    .tab:hover {
      color: var(--color-base-content);
    }
  }
  .tab {
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-300);
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-order: 0;
    --tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--tab-order);
    height: var(--tab-height);
    font-size: 0.875rem;
    padding-inline-start: var(--tab-p);
    padding-inline-end: var(--tab-p);
  }
  .tab:is(input[type="radio"]) {
    min-width: fit-content;
  }
  .tab:is(input[type="radio"]):after {
    content: attr(aria-label);
  }
  .tab:is(label) {
    position: relative;
  }
  .tab:is(label) input {
    position: absolute;
    inset: calc(0.25rem * 0);
    cursor: pointer;
    appearance: none;
    opacity: 0%;
  }
  .tab:checked + .tab-content, .tab:is(label:has(:checked)) + .tab-content, .tab:is(.tab-active, [aria-selected="true"]) + .tab-content {
    display: block;
    height: calc(100% - var(--tab-height) + var(--border));
  }
  .tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .tab:not(input):empty {
    flex-grow: 1;
    cursor: default;
  }
  .tab:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .tab:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .tab:focus-visible, .tab:is(label:has(:checked:focus-visible)) {
    outline: 2px solid currentColor;
    outline-offset: -5px;
  }
  .tab[disabled] {
    pointer-events: none;
    opacity: 40%;
  }
  .tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    webkit-user-select: none;
    user-select: none;
  }
  @media (hover: hover) {
    .tab:hover {
      color: var(--color-base-content);
    }
  }
  .tab {
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-300);
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-order: 0;
    --tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--tab-order);
    height: var(--tab-height);
    font-size: 0.875rem;
    padding-inline-start: var(--tab-p);
    padding-inline-end: var(--tab-p);
  }
  .tab:is(input[type="radio"]) {
    min-width: fit-content;
  }
  .tab:is(input[type="radio"]):after {
    content: attr(aria-label);
  }
  .tab:is(label) {
    position: relative;
  }
  .tab:is(label) input {
    position: absolute;
    inset: calc(0.25rem * 0);
    cursor: pointer;
    appearance: none;
    opacity: 0%;
  }
  .tab:checked + .tab-content, .tab:is(label:has(:checked)) + .tab-content, .tab:is(.tab-active, [aria-selected="true"]) + .tab-content {
    display: block;
    height: calc(100% - var(--tab-height) + var(--border));
  }
  .tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .tab:not(input):empty {
    flex-grow: 1;
    cursor: default;
  }
  .tab:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .tab:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .tab:focus-visible, .tab:is(label:has(:checked:focus-visible)) {
    outline: 2px solid currentColor;
    outline-offset: -5px;
  }
  .tab[disabled] {
    pointer-events: none;
    opacity: 40%;
  }
  .menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
  }
  .menu :where(li ul) {
    position: relative;
    margin-inline-start: calc(0.25rem * 4);
    padding-inline-start: calc(0.25rem * 2);
    white-space: nowrap;
  }
  .menu :where(li ul):before {
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    top: calc(0.25rem * 3);
    bottom: calc(0.25rem * 3);
    background-color: var(--color-base-content);
    opacity: 10%;
    width: var(--border);
    content: "";
  }
  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
  }
  .menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1.5);
    text-align: start;
    transition-property: color, background-color, box-shadow;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    text-wrap: balance;
    user-select: none;
  }
  .menu :where(li > details > summary) {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where(li > details > summary) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
  }
  .menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
    justify-self: flex-end;
    display: block;
    height: 0.375rem;
    width: 0.375rem;
    rotate: -135deg;
    translate: 0 -1px;
    transition-property: rotate, translate;
    transition-duration: 0.2s;
    content: "";
    transform-origin: 50% 50%;
    box-shadow: 2px 2px inset;
    pointer-events: none;
  }
  .menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    rotate: 45deg;
    translate: 0 1px;
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    cursor: pointer;
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    cursor: pointer;
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
  }
  .menu :where(li:empty) {
    background-color: var(--color-base-content);
    opacity: 10%;
    margin: 0.5rem 1rem;
    height: 1px;
  }
  .menu :where(li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
  }
  .menu :where(li) .badge {
    justify-self: flex-end;
  }
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }
  .menu :where(li).menu-disabled {
    pointer-events: none;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li).menu-disabled {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .menu .dropdown:focus-within .menu-dropdown-toggle:after {
    rotate: 45deg;
    translate: 0 1px;
  }
  .menu .dropdown-content {
    margin-top: calc(0.25rem * 2);
    padding: calc(0.25rem * 2);
  }
  .menu .dropdown-content:before {
    display: none;
  }
  .menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
  }
  .menu :where(li ul) {
    position: relative;
    margin-inline-start: calc(0.25rem * 4);
    padding-inline-start: calc(0.25rem * 2);
    white-space: nowrap;
  }
  .menu :where(li ul):before {
    position: absolute;
    inset-inline-start: calc(0.25rem * 0);
    top: calc(0.25rem * 3);
    bottom: calc(0.25rem * 3);
    background-color: var(--color-base-content);
    opacity: 10%;
    width: var(--border);
    content: "";
  }
  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
  }
  .menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1.5);
    text-align: start;
    transition-property: color, background-color, box-shadow;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    text-wrap: balance;
    user-select: none;
  }
  .menu :where(li > details > summary) {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where(li > details > summary) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
  }
  .menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
    justify-self: flex-end;
    display: block;
    height: 0.375rem;
    width: 0.375rem;
    rotate: -135deg;
    translate: 0 -1px;
    transition-property: rotate, translate;
    transition-duration: 0.2s;
    content: "";
    transform-origin: 50% 50%;
    box-shadow: 2px 2px inset;
    pointer-events: none;
  }
  .menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    rotate: 45deg;
    translate: 0 1px;
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    cursor: pointer;
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    cursor: pointer;
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
  }
  .menu :where(li:empty) {
    background-color: var(--color-base-content);
    opacity: 10%;
    margin: 0.5rem 1rem;
    height: 1px;
  }
  .menu :where(li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
  }
  .menu :where(li) .badge {
    justify-self: flex-end;
  }
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }
  .menu :where(li).menu-disabled {
    pointer-events: none;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li).menu-disabled {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .menu .dropdown:focus-within .menu-dropdown-toggle:after {
    rotate: 45deg;
    translate: 0 1px;
  }
  .menu .dropdown-content {
    margin-top: calc(0.25rem * 2);
    padding: calc(0.25rem * 2);
  }
  .menu .dropdown-content:before {
    display: none;
  }
  .floating-label {
    position: relative;
    display: block;
  }
  .floating-label input {
    display: block;
  }
  .floating-label input::placeholder {
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .floating-label textarea::placeholder {
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .floating-label > span {
    position: absolute;
    inset-inline-start: calc(0.25rem * 3);
    z-index: 1;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 1);
    opacity: 0%;
    font-size: 0.875rem;
    top: calc(var(--size-field, 0.25rem) * 10 / 2);
    line-height: 1;
    border-radius: 2px;
    pointer-events: none;
    translate: 0 -50%;
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .floating-label:focus-within ::placeholder, .floating-label:not(:has(input:placeholder-shown, textarea:placeholder-shown)) ::placeholder {
    opacity: 0%;
    top: 0;
    translate: -12.5% calc(-50% - 0.125em);
    scale: 0.75;
    pointer-events: auto;
  }
  .floating-label:focus-within > span, .floating-label:not(:has(input:placeholder-shown, textarea:placeholder-shown)) > span {
    opacity: 100%;
    top: 0;
    translate: -12.5% calc(-50% - 0.125em);
    scale: 0.75;
    pointer-events: auto;
    z-index: 2;
  }
  .floating-label:has(:disabled, [disabled]) > span {
    opacity: 0%;
  }
  .floating-label:has(.input-xs, .select-xs, .textarea-xs) span {
    font-size: 0.6875rem;
    top: calc(var(--size-field, 0.25rem) * 6 / 2);
  }
  .floating-label:has(.input-sm, .select-sm, .textarea-sm) span {
    font-size: 0.75rem;
    top: calc(var(--size-field, 0.25rem) * 8 / 2);
  }
  .floating-label:has(.input-md, .select-md, .textarea-md) span {
    font-size: 0.875rem;
    top: calc(var(--size-field, 0.25rem) * 10 / 2);
  }
  .floating-label:has(.input-lg, .select-lg, .textarea-lg) span {
    font-size: 1.125rem;
    top: calc(var(--size-field, 0.25rem) * 12 / 2);
  }
  .floating-label:has(.input-xl, .select-xl, .textarea-xl) span {
    font-size: 1.375rem;
    top: calc(var(--size-field, 0.25rem) * 14 / 2);
  }
  .floating-label {
    position: relative;
    display: block;
  }
  .floating-label input {
    display: block;
  }
  .floating-label input::placeholder {
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .floating-label textarea::placeholder {
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .floating-label > span {
    position: absolute;
    inset-inline-start: calc(0.25rem * 3);
    z-index: 1;
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 1);
    opacity: 0%;
    font-size: 0.875rem;
    top: calc(var(--size-field, 0.25rem) * 10 / 2);
    line-height: 1;
    border-radius: 2px;
    pointer-events: none;
    translate: 0 -50%;
    transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  }
  .floating-label:focus-within ::placeholder, .floating-label:not(:has(input:placeholder-shown, textarea:placeholder-shown)) ::placeholder {
    opacity: 0%;
    top: 0;
    translate: -12.5% calc(-50% - 0.125em);
    scale: 0.75;
    pointer-events: auto;
  }
  .floating-label:focus-within > span, .floating-label:not(:has(input:placeholder-shown, textarea:placeholder-shown)) > span {
    opacity: 100%;
    top: 0;
    translate: -12.5% calc(-50% - 0.125em);
    scale: 0.75;
    pointer-events: auto;
    z-index: 2;
  }
  .floating-label:has(:disabled, [disabled]) > span {
    opacity: 0%;
  }
  .floating-label:has(.input-xs, .select-xs, .textarea-xs) span {
    font-size: 0.6875rem;
    top: calc(var(--size-field, 0.25rem) * 6 / 2);
  }
  .floating-label:has(.input-sm, .select-sm, .textarea-sm) span {
    font-size: 0.75rem;
    top: calc(var(--size-field, 0.25rem) * 8 / 2);
  }
  .floating-label:has(.input-md, .select-md, .textarea-md) span {
    font-size: 0.875rem;
    top: calc(var(--size-field, 0.25rem) * 10 / 2);
  }
  .floating-label:has(.input-lg, .select-lg, .textarea-lg) span {
    font-size: 1.125rem;
    top: calc(var(--size-field, 0.25rem) * 12 / 2);
  }
  .floating-label:has(.input-xl, .select-xl, .textarea-xl) span {
    font-size: 1.375rem;
    top: calc(var(--size-field, 0.25rem) * 14 / 2);
  }
  .dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
  }
  .dropdown > *:not(summary):focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .dropdown > *:not(summary):focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .dropdown .dropdown-content {
    position: absolute;
  }
  .dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }
  .dropdown[popover], .dropdown .dropdown-content {
    z-index: 999;
    animation: dropdown 0.2s;
    transition-property: opacity, scale, display;
    transition-behavior: allow-discrete;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  @starting-style {
    .dropdown[popover], .dropdown .dropdown-content {
      scale: 95%;
      opacity: 0;
    }
  }
  .dropdown.dropdown-open > [tabindex]:first-child, .dropdown:not(.dropdown-hover):focus > [tabindex]:first-child, .dropdown:focus-within > [tabindex]:first-child {
    pointer-events: none;
  }
  .dropdown.dropdown-open .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:focus-within .dropdown-content {
    opacity: 100%;
  }
  .dropdown.dropdown-hover:hover .dropdown-content {
    opacity: 100%;
    scale: 100%;
  }
  .dropdown:is(details) summary::-webkit-details-marker {
    display: none;
  }
  .dropdown.dropdown-open .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
    scale: 100%;
  }
  .dropdown:where([popover]) {
    background: #0000;
  }
  .dropdown[popover] {
    position: fixed;
    color: inherit;
  }
  @supports not (position-area: bottom) {
    .dropdown[popover] {
      margin: auto;
    }
    .dropdown[popover].dropdown-open:not(:popover-open) {
      display: none;
      transform-origin: top;
      opacity: 0%;
      scale: 95%;
    }
    .dropdown[popover]::backdrop {
      background-color: color-mix(in oklab, #000 30%, #0000);
    }
  }
  .dropdown[popover]:not(.dropdown-open, :popover-open) {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }
  .dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
  }
  .dropdown > *:not(summary):focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .dropdown > *:not(summary):focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .dropdown .dropdown-content {
    position: absolute;
  }
  .dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }
  .dropdown[popover], .dropdown .dropdown-content {
    z-index: 999;
    animation: dropdown 0.2s;
    transition-property: opacity, scale, display;
    transition-behavior: allow-discrete;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  @starting-style {
    .dropdown[popover], .dropdown .dropdown-content {
      scale: 95%;
      opacity: 0;
    }
  }
  .dropdown.dropdown-open > [tabindex]:first-child, .dropdown:not(.dropdown-hover):focus > [tabindex]:first-child, .dropdown:focus-within > [tabindex]:first-child {
    pointer-events: none;
  }
  .dropdown.dropdown-open .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:focus-within .dropdown-content {
    opacity: 100%;
  }
  .dropdown.dropdown-hover:hover .dropdown-content {
    opacity: 100%;
    scale: 100%;
  }
  .dropdown:is(details) summary::-webkit-details-marker {
    display: none;
  }
  .dropdown.dropdown-open .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
    scale: 100%;
  }
  .dropdown:where([popover]) {
    background: #0000;
  }
  .dropdown[popover] {
    position: fixed;
    color: inherit;
  }
  @supports not (position-area: bottom) {
    .dropdown[popover] {
      margin: auto;
    }
    .dropdown[popover].dropdown-open:not(:popover-open) {
      display: none;
      transform-origin: top;
      opacity: 0%;
      scale: 95%;
    }
    .dropdown[popover]::backdrop {
      background-color: color-mix(in oklab, #000 30%, #0000);
    }
  }
  .dropdown[popover]:not(.dropdown-open, :popover-open) {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }
  :where(.btn) {
    width: unset;
  }
  .btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    }
  }
  .btn {
    --btn-shadow: 0 3px 2px -2px var(--btn-bg),
    0 4px 3px -2px var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn {
      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    }
  }
  .btn {
    --btn-noise: var(--fx-noise);
  }
  .prose .btn {
    text-decoration-line: none;
  }
  @media (hover: hover) {
    .btn:hover {
      --btn-bg: var(--btn-color, var(--color-base-200));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:hover {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
      }
    }
  }
  .btn:focus-visible {
    outline-width: 2px;
    outline-style: solid;
    isolation: isolate;
  }
  .btn:active:not(.btn-active) {
    translate: 0 0.5px;
    --btn-bg: var(--btn-color, var(--color-base-200));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:active:not(.btn-active) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
    }
  }
  .btn:active:not(.btn-active) {
    --btn-border: var(--btn-color, var(--color-base-200));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:active:not(.btn-active) {
      --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    }
  }
  .btn:active:not(.btn-active) {
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
  }
  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }
  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    box-shadow: none;
  }
  .btn:is(:disabled, [disabled], .btn-disabled) {
    pointer-events: none;
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:is(:disabled, [disabled], .btn-disabled) {
      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }
  @media (hover: hover) {
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      pointer-events: none;
      background-color: var(--color-neutral);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:is(:disabled, [disabled], .btn-disabled):hover {
        background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
      }
    }
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      --btn-border: #0000;
      --btn-fg: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:is(:disabled, [disabled], .btn-disabled):hover {
        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
    }
  }
  .btn:is(input[type="checkbox"], input[type="radio"]) {
    appearance: none;
  }
  .btn:is(input[type="checkbox"], input[type="radio"])::after {
    content: attr(aria-label);
  }
  .btn:where(input:checked:not(.filter .btn)) {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    isolation: isolate;
  }
  :where(.btn) {
    width: unset;
  }
  .btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    }
  }
  .btn {
    --btn-shadow: 0 3px 2px -2px var(--btn-bg),
    0 4px 3px -2px var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn {
      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    }
  }
  .btn {
    --btn-noise: var(--fx-noise);
  }
  .prose .btn {
    text-decoration-line: none;
  }
  @media (hover: hover) {
    .btn:hover {
      --btn-bg: var(--btn-color, var(--color-base-200));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:hover {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
      }
    }
  }
  .btn:focus-visible {
    outline-width: 2px;
    outline-style: solid;
    isolation: isolate;
  }
  .btn:active:not(.btn-active) {
    translate: 0 0.5px;
    --btn-bg: var(--btn-color, var(--color-base-200));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:active:not(.btn-active) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
    }
  }
  .btn:active:not(.btn-active) {
    --btn-border: var(--btn-color, var(--color-base-200));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:active:not(.btn-active) {
      --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    }
  }
  .btn:active:not(.btn-active) {
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
  }
  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }
  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    box-shadow: none;
  }
  .btn:is(:disabled, [disabled], .btn-disabled) {
    pointer-events: none;
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn:is(:disabled, [disabled], .btn-disabled) {
      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }
  @media (hover: hover) {
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      pointer-events: none;
      background-color: var(--color-neutral);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:is(:disabled, [disabled], .btn-disabled):hover {
        background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
      }
    }
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      --btn-border: #0000;
      --btn-fg: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn:is(:disabled, [disabled], .btn-disabled):hover {
        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
    }
  }
  .btn:is(input[type="checkbox"], input[type="radio"]) {
    appearance: none;
  }
  .btn:is(input[type="checkbox"], input[type="radio"])::after {
    content: attr(aria-label);
  }
  .btn:where(input:checked:not(.filter .btn)) {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    isolation: isolate;
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: center;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: center;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .visible {
    visibility: visible;
  }
  .tabs-lift {
    --tabs-height: auto;
    --tabs-direction: row;
  }
  .tabs-lift > .tab {
    --tab-border: 0 0 var(--border) 0;
    --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
    --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
    --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
    --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
    --tab-corner-position: top left, top right;
    border-width: var(--tab-border);
    border-start-start-radius: var(--tab-radius-ss);
    border-start-end-radius: var(--tab-radius-se);
    border-end-start-radius: var(--tab-radius-es);
    border-end-end-radius: var(--tab-radius-ee);
    padding: var(--tab-paddings);
    border-color: var(--tab-border-colors);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-lift > .tab:is(input:checked, label:has(:checked)) {
    --tab-border: var(--border) var(--border) 0 var(--border);
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
        var(--tab-border-color);
    --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
        calc(var(--tab-p) - var(--border));
    --tab-inset: auto auto 0 auto;
    --tab-grad: calc(69% - var(--border));
    --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
    --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
    background-color: var(--tab-bg);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):before {
    z-index: 1;
    content: "";
    display: block;
    position: absolute;
    width: var(--tab-corner-width);
    height: var(--tab-corner-height);
    background-position: var(--tab-corner-position);
    background-image: var(--radius-start), var(--radius-end);
    background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
    background-repeat: no-repeat;
    inset: var(--tab-inset);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
    --radius-start: none;
  }
  [dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
    transform: rotateY(180deg);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
    --radius-end: none;
  }
  [dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
    transform: rotateY(180deg);
  }
  .tabs-lift:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
  }
  .tabs-lift .tab-content {
    --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: var(--radius-box);
    --tabcontent-radius-es: var(--radius-box);
    --tabcontent-radius-ee: var(--radius-box);
  }
  .tabs-lift :checked + .tab-content:nth-child(1), .tabs-lift :checked + .tab-content:nth-child(n + 3), .tabs-lift label:has(:checked) + .tab-content:nth-child(1), .tabs-lift label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
    --tabcontent-radius-ss: var(--radius-box);
  }
  .tabs-lift {
    --tabs-height: auto;
    --tabs-direction: row;
  }
  .tabs-lift > .tab {
    --tab-border: 0 0 var(--border) 0;
    --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
    --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
    --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
    --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
    --tab-corner-position: top left, top right;
    border-width: var(--tab-border);
    border-start-start-radius: var(--tab-radius-ss);
    border-start-end-radius: var(--tab-radius-se);
    border-end-start-radius: var(--tab-radius-es);
    border-end-end-radius: var(--tab-radius-ee);
    padding: var(--tab-paddings);
    border-color: var(--tab-border-colors);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-lift > .tab:is(input:checked, label:has(:checked)) {
    --tab-border: var(--border) var(--border) 0 var(--border);
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
        var(--tab-border-color);
    --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
        calc(var(--tab-p) - var(--border));
    --tab-inset: auto auto 0 auto;
    --tab-grad: calc(69% - var(--border));
    --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
    --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
    background-color: var(--tab-bg);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):before {
    z-index: 1;
    content: "";
    display: block;
    position: absolute;
    width: var(--tab-corner-width);
    height: var(--tab-corner-height);
    background-position: var(--tab-corner-position);
    background-image: var(--radius-start), var(--radius-end);
    background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
    background-repeat: no-repeat;
    inset: var(--tab-inset);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
    --radius-start: none;
  }
  [dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
    transform: rotateY(180deg);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
    --radius-end: none;
  }
  [dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
    transform: rotateY(180deg);
  }
  .tabs-lift:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
  }
  .tabs-lift .tab-content {
    --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: var(--radius-box);
    --tabcontent-radius-es: var(--radius-box);
    --tabcontent-radius-ee: var(--radius-box);
  }
  .tabs-lift :checked + .tab-content:nth-child(1), .tabs-lift :checked + .tab-content:nth-child(n + 3), .tabs-lift label:has(:checked) + .tab-content:nth-child(1), .tabs-lift label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
    --tabcontent-radius-ss: var(--radius-box);
  }
  .list {
    display: flex;
    flex-direction: column;
    font-size: 0.875rem;
  }
  .list :where(.list-row) {
    --list-grid-cols: minmax(0, auto) 1fr;
    position: relative;
    display: grid;
    grid-auto-flow: column;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding: calc(0.25rem * 4);
    word-break: break-word;
    grid-template-columns: var(--list-grid-cols);
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(1)) {
    --list-grid-cols: 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(2)) {
    --list-grid-cols: minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(3)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(4)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(5)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(6)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
  }
  .list :where(.list-row) :not(.list-col-wrap) {
    grid-row-start: 1;
  }
  .list > :not(:last-child).list-row:after, .list > :not(:last-child) .list-row:after {
    content: "";
    border-bottom: var(--border) solid;
    inset-inline: var(--radius-box);
    position: absolute;
    bottom: calc(0.25rem * 0);
    border-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .list > :not(:last-child).list-row:after, .list > :not(:last-child) .list-row:after {
      border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
    }
  }
  .list {
    display: flex;
    flex-direction: column;
    font-size: 0.875rem;
  }
  .list :where(.list-row) {
    --list-grid-cols: minmax(0, auto) 1fr;
    position: relative;
    display: grid;
    grid-auto-flow: column;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding: calc(0.25rem * 4);
    word-break: break-word;
    grid-template-columns: var(--list-grid-cols);
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(1)) {
    --list-grid-cols: 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(2)) {
    --list-grid-cols: minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(3)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(4)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(5)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list :where(.list-row):has(.list-col-grow:nth-child(6)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
  }
  .list :where(.list-row) :not(.list-col-wrap) {
    grid-row-start: 1;
  }
  .list > :not(:last-child).list-row:after, .list > :not(:last-child) .list-row:after {
    content: "";
    border-bottom: var(--border) solid;
    inset-inline: var(--radius-box);
    position: absolute;
    bottom: calc(0.25rem * 0);
    border-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .list > :not(:last-child).list-row:after, .list > :not(:last-child) .list-row:after {
      border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
    }
  }
  .toast {
    position: fixed;
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 4);
    top: auto;
    bottom: calc(0.25rem * 4);
    display: flex;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    background-color: transparent;
    translate: var(--toast-x, 0) var(--toast-y, 0);
    width: max-content;
    max-width: calc(100vw - 2rem);
  }
  .toast > * {
    animation: toast 0.25s ease-out;
  }
  .toast:where(.toast-start) {
    inset-inline-start: calc(0.25rem * 4);
    inset-inline-end: auto;
    --toast-x: 0;
  }
  .toast:where(.toast-center) {
    inset-inline-start: calc(1/2 * 100%);
    inset-inline-end: calc(1/2 * 100%);
    --toast-x: -50%;
  }
  .toast:where(.toast-end) {
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 4);
    --toast-x: 0;
  }
  .toast:where(.toast-bottom) {
    top: auto;
    bottom: calc(0.25rem * 4);
    --toast-y: 0;
  }
  .toast:where(.toast-middle) {
    top: calc(1/2 * 100%);
    bottom: auto;
    --toast-y: -50%;
  }
  .toast:where(.toast-top) {
    top: calc(0.25rem * 4);
    bottom: auto;
    --toast-y: 0;
  }
  .toast {
    position: fixed;
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 4);
    top: auto;
    bottom: calc(0.25rem * 4);
    display: flex;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    background-color: transparent;
    translate: var(--toast-x, 0) var(--toast-y, 0);
    width: max-content;
    max-width: calc(100vw - 2rem);
  }
  .toast > * {
    animation: toast 0.25s ease-out;
  }
  .toast:where(.toast-start) {
    inset-inline-start: calc(0.25rem * 4);
    inset-inline-end: auto;
    --toast-x: 0;
  }
  .toast:where(.toast-center) {
    inset-inline-start: calc(1/2 * 100%);
    inset-inline-end: calc(1/2 * 100%);
    --toast-x: -50%;
  }
  .toast:where(.toast-end) {
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 4);
    --toast-x: 0;
  }
  .toast:where(.toast-bottom) {
    top: auto;
    bottom: calc(0.25rem * 4);
    --toast-y: 0;
  }
  .toast:where(.toast-middle) {
    top: calc(1/2 * 100%);
    bottom: auto;
    --toast-y: -50%;
  }
  .toast:where(.toast-top) {
    top: calc(0.25rem * 4);
    bottom: auto;
    --toast-y: 0;
  }
  .toggle {
    border: var(--border) solid currentColor;
    color: var(--input-color);
    position: relative;
    display: inline-grid;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    grid-template-columns: 0fr 1fr 1fr;
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
    padding: var(--toggle-p);
    box-shadow: 0 1px currentColor inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .toggle {
      box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    }
  }
  .toggle {
    transition: color 0.3s, grid-template-columns 0.2s;
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .toggle {
      --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
    }
  }
  .toggle {
    --toggle-p: calc(var(--size) * 0.125);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
    height: var(--size);
  }
  .toggle > * {
    z-index: 1;
    grid-column: span 1 / span 1;
    grid-column-start: 2;
    grid-row-start: 1;
    height: 100%;
    cursor: pointer;
    appearance: none;
    background-color: transparent;
    padding: calc(0.25rem * 0.5);
    transition: opacity 0.2s, rotate 0.4s;
    border: none;
  }
  .toggle > *:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .toggle > *:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .toggle > *:nth-child(2) {
    color: var(--color-base-100);
    rotate: 0deg;
  }
  .toggle > *:nth-child(3) {
    color: var(--color-base-100);
    opacity: 0%;
    rotate: -15deg;
  }
  .toggle:has(:checked) > :nth-child(2) {
    opacity: 0%;
    rotate: 15deg;
  }
  .toggle:has(:checked) > :nth-child(3) {
    opacity: 100%;
    rotate: 0deg;
  }
  .toggle:before {
    position: relative;
    inset-inline-start: calc(0.25rem * 0);
    grid-column-start: 2;
    grid-row-start: 1;
    aspect-ratio: 1 / 1;
    height: 100%;
    border-radius: var(--radius-selector);
    background-color: currentColor;
    translate: 0;
    --tw-content: "";
    content: var(--tw-content);
    transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .toggle:before {
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
    }
  }
  .toggle:before {
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  @media (forced-colors: active) {
    .toggle:before {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: calc(1px * -1);
    }
  }
  @media print {
    .toggle:before {
      outline: 0.25rem solid;
      outline-offset: -1rem;
    }
  }
  .toggle:focus-visible, .toggle:has(:focus-visible) {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  .toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked) {
    grid-template-columns: 1fr 1fr 0fr;
    background-color: var(--color-base-100);
    --input-color: var(--color-base-content);
  }
  .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
    background-color: currentColor;
  }
  @starting-style {
    .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
      opacity: 0;
    }
  }
  .toggle:indeterminate {
    grid-template-columns: 0.5fr 1fr 0.5fr;
  }
  .toggle:disabled {
    cursor: not-allowed;
    opacity: 30%;
  }
  .toggle:disabled:before {
    background-color: transparent;
    border: var(--border) solid currentColor;
  }
  .toggle {
    border: var(--border) solid currentColor;
    color: var(--input-color);
    position: relative;
    display: inline-grid;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    grid-template-columns: 0fr 1fr 1fr;
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
    padding: var(--toggle-p);
    box-shadow: 0 1px currentColor inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .toggle {
      box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    }
  }
  .toggle {
    transition: color 0.3s, grid-template-columns 0.2s;
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .toggle {
      --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
    }
  }
  .toggle {
    --toggle-p: calc(var(--size) * 0.125);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
    height: var(--size);
  }
  .toggle > * {
    z-index: 1;
    grid-column: span 1 / span 1;
    grid-column-start: 2;
    grid-row-start: 1;
    height: 100%;
    cursor: pointer;
    appearance: none;
    background-color: transparent;
    padding: calc(0.25rem * 0.5);
    transition: opacity 0.2s, rotate 0.4s;
    border: none;
  }
  .toggle > *:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .toggle > *:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .toggle > *:nth-child(2) {
    color: var(--color-base-100);
    rotate: 0deg;
  }
  .toggle > *:nth-child(3) {
    color: var(--color-base-100);
    opacity: 0%;
    rotate: -15deg;
  }
  .toggle:has(:checked) > :nth-child(2) {
    opacity: 0%;
    rotate: 15deg;
  }
  .toggle:has(:checked) > :nth-child(3) {
    opacity: 100%;
    rotate: 0deg;
  }
  .toggle:before {
    position: relative;
    inset-inline-start: calc(0.25rem * 0);
    grid-column-start: 2;
    grid-row-start: 1;
    aspect-ratio: 1 / 1;
    height: 100%;
    border-radius: var(--radius-selector);
    background-color: currentColor;
    translate: 0;
    --tw-content: "";
    content: var(--tw-content);
    transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .toggle:before {
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
    }
  }
  .toggle:before {
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  @media (forced-colors: active) {
    .toggle:before {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: calc(1px * -1);
    }
  }
  @media print {
    .toggle:before {
      outline: 0.25rem solid;
      outline-offset: -1rem;
    }
  }
  .toggle:focus-visible, .toggle:has(:focus-visible) {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  .toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked) {
    grid-template-columns: 1fr 1fr 0fr;
    background-color: var(--color-base-100);
    --input-color: var(--color-base-content);
  }
  .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
    background-color: currentColor;
  }
  @starting-style {
    .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
      opacity: 0;
    }
  }
  .toggle:indeterminate {
    grid-template-columns: 0.5fr 1fr 0.5fr;
  }
  .toggle:disabled {
    cursor: not-allowed;
    opacity: 30%;
  }
  .toggle:disabled:before {
    background-color: transparent;
    border: var(--border) solid currentColor;
  }
  .input {
    cursor: text;
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .input {
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .input:where(input) {
    display: inline-flex;
  }
  .input :where(input) {
    display: inline-flex;
    height: 100%;
    width: 100%;
    appearance: none;
    background-color: transparent;
    border: none;
  }
  .input :where(input):focus, .input :where(input):focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .input :where(input):focus, .input :where(input):focus-within {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .input :where(input[type="url"]), .input :where(input[type="email"]) {
    direction: ltr;
  }
  .input :where(input[type="date"]) {
    display: inline-block;
  }
  .input:focus, .input:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:focus, .input:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .input:focus, .input:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }
  .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
    box-shadow: none;
  }
  .input:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed;
  }
  .input::-webkit-date-and-time-value {
    text-align: inherit;
  }
  .input[type="number"]::-webkit-inner-spin-button {
    margin-block: calc(0.25rem * -3);
    margin-inline-end: calc(0.25rem * -3);
  }
  .input::-webkit-calendar-picker-indicator {
    position: absolute;
    inset-inline-end: 0.75em;
  }
  .input {
    cursor: text;
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .input {
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .input:where(input) {
    display: inline-flex;
  }
  .input :where(input) {
    display: inline-flex;
    height: 100%;
    width: 100%;
    appearance: none;
    background-color: transparent;
    border: none;
  }
  .input :where(input):focus, .input :where(input):focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .input :where(input):focus, .input :where(input):focus-within {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .input :where(input[type="url"]), .input :where(input[type="email"]) {
    direction: ltr;
  }
  .input :where(input[type="date"]) {
    display: inline-block;
  }
  .input:focus, .input:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:focus, .input:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .input:focus, .input:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }
  .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
    box-shadow: none;
  }
  .input:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed;
  }
  .input::-webkit-date-and-time-value {
    text-align: inherit;
  }
  .input[type="number"]::-webkit-inner-spin-button {
    margin-block: calc(0.25rem * -3);
    margin-inline-end: calc(0.25rem * -3);
  }
  .input::-webkit-calendar-picker-indicator {
    position: absolute;
    inset-inline-end: 0.75em;
  }
  .input\! {
    cursor: text !important;
    border: var(--border) solid #0000 !important;
    position: relative !important;
    display: inline-flex !important;
    flex-shrink: 1 !important;
    appearance: none !important;
    align-items: center !important;
    gap: calc(0.25rem * 2) !important;
    background-color: var(--color-base-100) !important;
    padding-inline: calc(0.25rem * 3) !important;
    vertical-align: middle !important;
    white-space: nowrap !important;
    width: clamp(3rem, 20rem, 100%) !important;
    height: var(--size) !important;
    font-size: 0.875rem !important;
    touch-action: manipulation !important;
    border-start-start-radius: var(--join-ss, var(--radius-field)) !important;
    border-start-end-radius: var(--join-se, var(--radius-field)) !important;
    border-end-start-radius: var(--join-es, var(--radius-field)) !important;
    border-end-end-radius: var(--join-ee, var(--radius-field)) !important;
    border-color: var(--input-color) !important;
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\! {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset !important;
    }
  }
  .input\! {
    --size: calc(var(--size-field, 0.25rem) * 10) !important;
    --input-color: var(--color-base-content) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\! {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000) !important;
    }
  }
  .input\!:where(input) {
    display: inline-flex !important;
  }
  .input\! :where(input) {
    display: inline-flex !important;
    height: 100% !important;
    width: 100% !important;
    appearance: none !important;
    background-color: transparent !important;
    border: none !important;
  }
  .input\! :where(input):focus, .input\! :where(input):focus-within {
    --tw-outline-style: none !important;
    outline-style: none !important;
  }
  @media (forced-colors: active) {
    .input\! :where(input):focus, .input\! :where(input):focus-within {
      outline: 2px solid transparent !important;
      outline-offset: 2px !important;
    }
  }
  .input\! :where(input[type="url"]), .input\! :where(input[type="email"]) {
    direction: ltr !important;
  }
  .input\! :where(input[type="date"]) {
    display: inline-block !important;
  }
  .input\!:focus, .input\!:focus-within {
    --input-color: var(--color-base-content) !important;
    box-shadow: 0 1px var(--input-color) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\!:focus, .input\!:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) !important;
    }
  }
  .input\!:focus, .input\!:focus-within {
    outline: 2px solid var(--input-color) !important;
    outline-offset: 2px !important;
    isolation: isolate !important;
    z-index: 1 !important;
  }
  .input\!:has(> input[disabled]), .input\!:is(:disabled, [disabled]) {
    cursor: not-allowed !important;
    border-color: var(--color-base-200) !important;
    background-color: var(--color-base-200) !important;
    color: var(--color-base-content) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\!:has(> input[disabled]), .input\!:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
    }
  }
  .input\!:has(> input[disabled])::placeholder, .input\!:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\!:has(> input[disabled])::placeholder, .input\!:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
    }
  }
  .input\!:has(> input[disabled]), .input\!:is(:disabled, [disabled]) {
    box-shadow: none !important;
  }
  .input\!:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed !important;
  }
  .input\!::-webkit-date-and-time-value {
    text-align: inherit !important;
  }
  .input\![type="number"]::-webkit-inner-spin-button {
    margin-block: calc(0.25rem * -3) !important;
    margin-inline-end: calc(0.25rem * -3) !important;
  }
  .input\!::-webkit-calendar-picker-indicator {
    position: absolute !important;
    inset-inline-end: 0.75em !important;
  }
  .input\! {
    cursor: text !important;
    border: var(--border) solid #0000 !important;
    position: relative !important;
    display: inline-flex !important;
    flex-shrink: 1 !important;
    appearance: none !important;
    align-items: center !important;
    gap: calc(0.25rem * 2) !important;
    background-color: var(--color-base-100) !important;
    padding-inline: calc(0.25rem * 3) !important;
    vertical-align: middle !important;
    white-space: nowrap !important;
    width: clamp(3rem, 20rem, 100%) !important;
    height: var(--size) !important;
    font-size: 0.875rem !important;
    touch-action: manipulation !important;
    border-start-start-radius: var(--join-ss, var(--radius-field)) !important;
    border-start-end-radius: var(--join-se, var(--radius-field)) !important;
    border-end-start-radius: var(--join-es, var(--radius-field)) !important;
    border-end-end-radius: var(--join-ee, var(--radius-field)) !important;
    border-color: var(--input-color) !important;
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\! {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset !important;
    }
  }
  .input\! {
    --size: calc(var(--size-field, 0.25rem) * 10) !important;
    --input-color: var(--color-base-content) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\! {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000) !important;
    }
  }
  .input\!:where(input) {
    display: inline-flex !important;
  }
  .input\! :where(input) {
    display: inline-flex !important;
    height: 100% !important;
    width: 100% !important;
    appearance: none !important;
    background-color: transparent !important;
    border: none !important;
  }
  .input\! :where(input):focus, .input\! :where(input):focus-within {
    --tw-outline-style: none !important;
    outline-style: none !important;
  }
  @media (forced-colors: active) {
    .input\! :where(input):focus, .input\! :where(input):focus-within {
      outline: 2px solid transparent !important;
      outline-offset: 2px !important;
    }
  }
  .input\! :where(input[type="url"]), .input\! :where(input[type="email"]) {
    direction: ltr !important;
  }
  .input\! :where(input[type="date"]) {
    display: inline-block !important;
  }
  .input\!:focus, .input\!:focus-within {
    --input-color: var(--color-base-content) !important;
    box-shadow: 0 1px var(--input-color) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\!:focus, .input\!:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) !important;
    }
  }
  .input\!:focus, .input\!:focus-within {
    outline: 2px solid var(--input-color) !important;
    outline-offset: 2px !important;
    isolation: isolate !important;
    z-index: 1 !important;
  }
  .input\!:has(> input[disabled]), .input\!:is(:disabled, [disabled]) {
    cursor: not-allowed !important;
    border-color: var(--color-base-200) !important;
    background-color: var(--color-base-200) !important;
    color: var(--color-base-content) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\!:has(> input[disabled]), .input\!:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
    }
  }
  .input\!:has(> input[disabled])::placeholder, .input\!:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content) !important;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .input\!:has(> input[disabled])::placeholder, .input\!:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
    }
  }
  .input\!:has(> input[disabled]), .input\!:is(:disabled, [disabled]) {
    box-shadow: none !important;
  }
  .input\!:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed !important;
  }
  .input\!::-webkit-date-and-time-value {
    text-align: inherit !important;
  }
  .input\![type="number"]::-webkit-inner-spin-button {
    margin-block: calc(0.25rem * -3) !important;
    margin-inline-end: calc(0.25rem * -3) !important;
  }
  .input\!::-webkit-calendar-picker-indicator {
    position: absolute !important;
    inset-inline-end: 0.75em !important;
  }
  .table {
    font-size: 0.875rem;
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    text-align: left;
  }
  .table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }
  @media (hover: hover) {
    .table tr.row-hover:hover, .table tr.row-hover:nth-child(even):hover {
      background-color: var(--color-base-200);
    }
  }
  .table :where(th, td) {
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    vertical-align: middle;
  }
  .table :where(thead, tfoot) {
    white-space: nowrap;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead, tfoot) {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
  }
  .table :where(thead, tfoot) {
    font-size: 0.875rem;
    font-weight: 600;
  }
  .table :where(tfoot) {
    border-top: var(--border) solid var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(tfoot) {
      border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
  }
  .table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: calc(0.25rem * 0);
    z-index: 1;
    background-color: var(--color-base-100);
  }
  .table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: calc(0.25rem * 0);
    z-index: 1;
    background-color: var(--color-base-100);
  }
  .table :where(.table-pin-cols tr th) {
    position: sticky;
    right: calc(0.25rem * 0);
    left: calc(0.25rem * 0);
    background-color: var(--color-base-100);
  }
  .table :where(thead tr, tbody tr:not(:last-child)) {
    border-bottom: var(--border) solid var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
  }
  .table {
    font-size: 0.875rem;
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    text-align: left;
  }
  .table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }
  @media (hover: hover) {
    .table tr.row-hover:hover, .table tr.row-hover:nth-child(even):hover {
      background-color: var(--color-base-200);
    }
  }
  .table :where(th, td) {
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    vertical-align: middle;
  }
  .table :where(thead, tfoot) {
    white-space: nowrap;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead, tfoot) {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
  }
  .table :where(thead, tfoot) {
    font-size: 0.875rem;
    font-weight: 600;
  }
  .table :where(tfoot) {
    border-top: var(--border) solid var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(tfoot) {
      border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
  }
  .table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: calc(0.25rem * 0);
    z-index: 1;
    background-color: var(--color-base-100);
  }
  .table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: calc(0.25rem * 0);
    z-index: 1;
    background-color: var(--color-base-100);
  }
  .table :where(.table-pin-cols tr th) {
    position: sticky;
    right: calc(0.25rem * 0);
    left: calc(0.25rem * 0);
    background-color: var(--color-base-100);
  }
  .table :where(thead tr, tbody tr:not(:last-child)) {
    border-bottom: var(--border) solid var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
    }
  }
  .avatar-offline:before {
    content: "";
    position: absolute;
    z-index: 1;
    display: block;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-300);
    outline: 2px solid var(--color-base-100);
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
  }
  .avatar-offline:before {
    content: "";
    position: absolute;
    z-index: 1;
    display: block;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-300);
    outline: 2px solid var(--color-base-100);
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
  }
  .avatar-online:before {
    content: "";
    position: absolute;
    z-index: 1;
    display: block;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-success);
    outline: 2px solid var(--color-base-100);
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
  }
  .avatar-online:before {
    content: "";
    position: absolute;
    z-index: 1;
    display: block;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-success);
    outline: 2px solid var(--color-base-100);
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: 0.25rem;
    --range-bg: currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range {
      --range-bg: color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .range {
    cursor: pointer;
    overflow: hidden;
    background-color: transparent;
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    border: none;
    height: var(--range-thumb-size);
  }
  [dir="rtl"] .range {
    --range-dir: -1;
  }
  .range:focus {
    outline: none;
  }
  .range:focus-visible {
    outline: 2px solid;
    outline-offset: 2px;
  }
  .range::-webkit-slider-runnable-track {
    width: 100%;
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    height: calc(var(--range-thumb-size) * 0.5);
  }
  @media (forced-colors: active) {
    .range::-webkit-slider-runnable-track {
      border: 1px solid;
    }
  }
  @media (forced-colors: active) {
    .range::-moz-range-track {
      border: 1px solid;
    }
  }
  .range::-webkit-slider-thumb {
    position: relative;
    box-sizing: border-box;
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    background-color: currentColor;
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    appearance: none;
    webkit-appearance: none;
    top: 50%;
    color: var(--range-progress);
    transform: translateY(-50%);
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range::-webkit-slider-thumb {
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
  }
  .range::-moz-range-track {
    width: 100%;
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    height: calc(var(--range-thumb-size) * 0.5);
  }
  .range::-moz-range-thumb {
    position: relative;
    box-sizing: border-box;
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    background-color: currentColor;
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    top: 50%;
    color: var(--range-progress);
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range::-moz-range-thumb {
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
  }
  .range:disabled {
    cursor: not-allowed;
    opacity: 30%;
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: 0.25rem;
    --range-bg: currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range {
      --range-bg: color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .range {
    cursor: pointer;
    overflow: hidden;
    background-color: transparent;
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    border: none;
    height: var(--range-thumb-size);
  }
  [dir="rtl"] .range {
    --range-dir: -1;
  }
  .range:focus {
    outline: none;
  }
  .range:focus-visible {
    outline: 2px solid;
    outline-offset: 2px;
  }
  .range::-webkit-slider-runnable-track {
    width: 100%;
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    height: calc(var(--range-thumb-size) * 0.5);
  }
  @media (forced-colors: active) {
    .range::-webkit-slider-runnable-track {
      border: 1px solid;
    }
  }
  @media (forced-colors: active) {
    .range::-moz-range-track {
      border: 1px solid;
    }
  }
  .range::-webkit-slider-thumb {
    position: relative;
    box-sizing: border-box;
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    background-color: currentColor;
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    appearance: none;
    webkit-appearance: none;
    top: 50%;
    color: var(--range-progress);
    transform: translateY(-50%);
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range::-webkit-slider-thumb {
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
  }
  .range::-moz-range-track {
    width: 100%;
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    height: calc(var(--range-thumb-size) * 0.5);
  }
  .range::-moz-range-thumb {
    position: relative;
    box-sizing: border-box;
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    background-color: currentColor;
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    top: 50%;
    color: var(--range-progress);
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .range::-moz-range-thumb {
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
    }
  }
  .range:disabled {
    cursor: not-allowed;
    opacity: 30%;
  }
  .countdown {
    display: inline-flex;
  }
  .countdown.countdown {
    line-height: 1em;
  }
  .countdown > * {
    display: inline-block;
    overflow-y: hidden;
    height: 1em;
  }
  .countdown > *:before {
    position: relative;
    content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
    white-space: pre;
    top: calc(var(--value) * -1em);
    text-align: center;
    transition: all 1s cubic-bezier(1, 0, 0, 1);
  }
  .countdown {
    display: inline-flex;
  }
  .countdown.countdown {
    line-height: 1em;
  }
  .countdown > * {
    display: inline-block;
    overflow-y: hidden;
    height: 1em;
  }
  .countdown > *:before {
    position: relative;
    content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
    white-space: pre;
    top: calc(var(--value) * -1em);
    text-align: center;
    transition: all 1s cubic-bezier(1, 0, 0, 1);
  }
  .select {
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .select {
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .select {
    --size: calc(var(--size-field, 0.25rem) * 10);
  }
  [dir="rtl"] .select {
    background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
  }
  .select select {
    margin-inline-start: calc(0.25rem * -4);
    margin-inline-end: calc(0.25rem * -7);
    width: calc(100% + 2.75rem);
    appearance: none;
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    height: calc(100% - 2px);
    background: inherit;
    border-radius: inherit;
    border-style: none;
  }
  .select select:focus, .select select:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .select select:focus, .select select:focus-within {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .select select:not(:last-child) {
    margin-inline-end: calc(0.25rem * -5.5);
    background-image: none;
  }
  .select:focus, .select:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select:focus, .select:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .select:focus, .select:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }
  .select:has(> select[disabled]), .select:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select:has(> select[disabled]), .select:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .select:has(> select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select:has(> select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .select:has(> select[disabled]) > select[disabled] {
    cursor: not-allowed;
  }
  .select {
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .select {
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .select {
    --size: calc(var(--size-field, 0.25rem) * 10);
  }
  [dir="rtl"] .select {
    background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
  }
  .select select {
    margin-inline-start: calc(0.25rem * -4);
    margin-inline-end: calc(0.25rem * -7);
    width: calc(100% + 2.75rem);
    appearance: none;
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    height: calc(100% - 2px);
    background: inherit;
    border-radius: inherit;
    border-style: none;
  }
  .select select:focus, .select select:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .select select:focus, .select select:focus-within {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .select select:not(:last-child) {
    margin-inline-end: calc(0.25rem * -5.5);
    background-image: none;
  }
  .select:focus, .select:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select:focus, .select:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .select:focus, .select:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }
  .select:has(> select[disabled]), .select:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select:has(> select[disabled]), .select:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .select:has(> select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .select:has(> select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .select:has(> select[disabled]) > select[disabled] {
    cursor: not-allowed;
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
  }
  .card:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .card:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .card:focus-visible {
    outline-color: currentColor;
  }
  .card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }
  .card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }
  .card:where(.card-border) {
    border: var(--border) solid var(--color-base-200);
  }
  .card:where(.card-dash) {
    border: var(--border) dashed var(--color-base-200);
  }
  .card.image-full {
    display: grid;
  }
  .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .card.image-full > .card-body {
    position: relative;
    color: var(--color-neutral-content);
  }
  .card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
  }
  .card.image-full > figure img {
    height: 100%;
    object-fit: cover;
    filter: brightness(28%);
  }
  .card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .card:has(> input:is(input[type="checkbox"], input[type="radio"])) {
    cursor: pointer;
    user-select: none;
  }
  .card:has(> :checked) {
    outline: 2px solid currentColor;
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
  }
  .card:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .card:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .card:focus-visible {
    outline-color: currentColor;
  }
  .card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }
  .card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }
  .card:where(.card-border) {
    border: var(--border) solid var(--color-base-200);
  }
  .card:where(.card-dash) {
    border: var(--border) dashed var(--color-base-200);
  }
  .card.image-full {
    display: grid;
  }
  .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .card.image-full > .card-body {
    position: relative;
    color: var(--color-neutral-content);
  }
  .card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
  }
  .card.image-full > figure img {
    height: 100%;
    object-fit: cover;
    filter: brightness(28%);
  }
  .card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .card:has(> input:is(input[type="checkbox"], input[type="radio"])) {
    cursor: pointer;
    user-select: none;
  }
  .card:has(> :checked) {
    outline: 2px solid currentColor;
  }
  .avatar {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
  }
  .avatar > div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden;
  }
  .avatar img {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
  .avatar {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
  }
  .avatar > div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden;
  }
  .avatar img {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
  .checkbox {
    border: var(--border) solid var(--input-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .checkbox {
      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    }
  }
  .checkbox {
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  .checkbox:before {
    --tw-content: "";
    content: var(--tw-content);
    display: block;
    width: 100%;
    height: 100%;
    rotate: 45deg;
    background-color: currentColor;
    opacity: 0%;
    transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
    transition-delay: 0.1s;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
    box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    font-size: 1rem;
    line-height: 0.75;
  }
  .checkbox:focus-visible {
    outline: 2px solid var(--input-color, currentColor);
    outline-offset: 2px;
  }
  .checkbox:checked, .checkbox[aria-checked="true"] {
    background-color: var(--input-color, #0000);
    box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
  }
  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
    opacity: 100%;
  }
  @media (forced-colors: active) {
    .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
      rotate: 0deg;
      background-color: transparent;
      --tw-content: "✔︎";
      clip-path: none;
    }
  }
  @media print {
    .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
      rotate: 0deg;
      background-color: transparent;
      --tw-content: "✔︎";
      clip-path: none;
    }
  }
  .checkbox:indeterminate:before {
    rotate: 0deg;
    opacity: 100%;
    translate: 0 -35%;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
  }
  .checkbox:disabled {
    cursor: not-allowed;
    opacity: 20%;
  }
  .checkbox {
    border: var(--border) solid var(--input-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .checkbox {
      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    }
  }
  .checkbox {
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  .checkbox:before {
    --tw-content: "";
    content: var(--tw-content);
    display: block;
    width: 100%;
    height: 100%;
    rotate: 45deg;
    background-color: currentColor;
    opacity: 0%;
    transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
    transition-delay: 0.1s;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
    box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    font-size: 1rem;
    line-height: 0.75;
  }
  .checkbox:focus-visible {
    outline: 2px solid var(--input-color, currentColor);
    outline-offset: 2px;
  }
  .checkbox:checked, .checkbox[aria-checked="true"] {
    background-color: var(--input-color, #0000);
    box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
  }
  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
    opacity: 100%;
  }
  @media (forced-colors: active) {
    .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
      rotate: 0deg;
      background-color: transparent;
      --tw-content: "✔︎";
      clip-path: none;
    }
  }
  @media print {
    .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
      rotate: 0deg;
      background-color: transparent;
      --tw-content: "✔︎";
      clip-path: none;
    }
  }
  .checkbox:indeterminate:before {
    rotate: 0deg;
    opacity: 100%;
    translate: 0 -35%;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
  }
  .checkbox:disabled {
    cursor: not-allowed;
    opacity: 20%;
  }
  .radio {
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--input-color, currentColor);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .radio {
      border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
    }
  }
  .radio {
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, currentColor);
  }
  .radio:before {
    display: block;
    width: 100%;
    height: 100%;
    border-radius: calc(infinity * 1px);
    --tw-content: "";
    content: var(--tw-content);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  .radio:focus-visible {
    outline: 2px solid currentColor;
  }
  .radio:checked, .radio[aria-checked="true"] {
    animation: radio 0.2s ease-out;
    border-color: currentColor;
    background-color: var(--color-base-100);
  }
  .radio:checked:before, .radio[aria-checked="true"]:before {
    background-color: currentColor;
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
  }
  @media (forced-colors: active) {
    .radio:checked:before, .radio[aria-checked="true"]:before {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: calc(1px * -1);
    }
  }
  @media print {
    .radio:checked:before, .radio[aria-checked="true"]:before {
      outline: 0.25rem solid;
      outline-offset: -1rem;
    }
  }
  .radio:disabled {
    cursor: not-allowed;
    opacity: 20%;
  }
  .radio {
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--input-color, currentColor);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .radio {
      border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
    }
  }
  .radio {
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, currentColor);
  }
  .radio:before {
    display: block;
    width: 100%;
    height: 100%;
    border-radius: calc(infinity * 1px);
    --tw-content: "";
    content: var(--tw-content);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  .radio:focus-visible {
    outline: 2px solid currentColor;
  }
  .radio:checked, .radio[aria-checked="true"] {
    animation: radio 0.2s ease-out;
    border-color: currentColor;
    background-color: var(--color-base-100);
  }
  .radio:checked:before, .radio[aria-checked="true"]:before {
    background-color: currentColor;
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
  }
  @media (forced-colors: active) {
    .radio:checked:before, .radio[aria-checked="true"]:before {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: calc(1px * -1);
    }
  }
  @media print {
    .radio:checked:before, .radio[aria-checked="true"]:before {
      outline: 0.25rem solid;
      outline-offset: -1rem;
    }
  }
  .radio:disabled {
    cursor: not-allowed;
    opacity: 20%;
  }
  .drawer {
    position: relative;
    display: grid;
    width: 100%;
    grid-auto-columns: max-content auto;
  }
  .drawer {
    position: relative;
    display: grid;
    width: 100%;
    grid-auto-columns: max-content auto;
  }
  .stats {
    position: relative;
    display: inline-grid;
    grid-auto-flow: column;
    overflow-x: auto;
    border-radius: var(--radius-box);
  }
  .stats {
    position: relative;
    display: inline-grid;
    grid-auto-flow: column;
    overflow-x: auto;
    border-radius: var(--radius-box);
  }
  .progress {
    position: relative;
    height: calc(0.25rem * 2);
    width: 100%;
    appearance: none;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .progress {
      background-color: color-mix(in oklab, currentColor 20%, transparent);
    }
  }
  .progress {
    color: var(--color-base-content);
  }
  .progress:indeterminate {
    background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
    background-size: 200%;
    background-position-x: 15%;
    animation: progress 5s ease-in-out infinite;
  }
  @supports (-moz-appearance: none) {
    .progress:indeterminate::-moz-progress-bar {
      background-color: transparent;
      background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
      background-size: 200%;
      background-position-x: 15%;
      animation: progress 5s ease-in-out infinite;
    }
  }
  @supports (-moz-appearance: none) {
    .progress::-moz-progress-bar {
      border-radius: var(--radius-box);
      background-color: currentColor;
    }
  }
  @supports (-webkit-appearance: none) {
    .progress::-webkit-progress-bar {
      border-radius: var(--radius-box);
      background-color: transparent;
    }
    .progress::-webkit-progress-value {
      border-radius: var(--radius-box);
      background-color: currentColor;
    }
  }
  .progress {
    position: relative;
    height: calc(0.25rem * 2);
    width: 100%;
    appearance: none;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .progress {
      background-color: color-mix(in oklab, currentColor 20%, transparent);
    }
  }
  .progress {
    color: var(--color-base-content);
  }
  .progress:indeterminate {
    background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
    background-size: 200%;
    background-position-x: 15%;
    animation: progress 5s ease-in-out infinite;
  }
  @supports (-moz-appearance: none) {
    .progress:indeterminate::-moz-progress-bar {
      background-color: transparent;
      background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
      background-size: 200%;
      background-position-x: 15%;
      animation: progress 5s ease-in-out infinite;
    }
  }
  @supports (-moz-appearance: none) {
    .progress::-moz-progress-bar {
      border-radius: var(--radius-box);
      background-color: currentColor;
    }
  }
  @supports (-webkit-appearance: none) {
    .progress::-webkit-progress-bar {
      border-radius: var(--radius-box);
      background-color: transparent;
    }
    .progress::-webkit-progress-value {
      border-radius: var(--radius-box);
      background-color: currentColor;
    }
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .dropdown-left {
    --anchor-h: left;
    --anchor-v: span-bottom;
  }
  .dropdown-left .dropdown-content {
    inset-inline-end: 100%;
    top: calc(0.25rem * 0);
    bottom: auto;
    transform-origin: right;
  }
  .dropdown-left {
    --anchor-h: left;
    --anchor-v: span-bottom;
  }
  .dropdown-left .dropdown-content {
    inset-inline-end: 100%;
    top: calc(0.25rem * 0);
    bottom: auto;
    transform-origin: right;
  }
  .dropdown-end {
    --anchor-h: span-left;
  }
  .dropdown-end :where(.dropdown-content) {
    inset-inline-end: calc(0.25rem * 0);
    translate: 0 0;
  }
  .dropdown-end.dropdown-left {
    --anchor-h: left;
    --anchor-v: span-top;
  }
  .dropdown-end.dropdown-left .dropdown-content {
    top: auto;
    bottom: calc(0.25rem * 0);
  }
  .dropdown-end.dropdown-right {
    --anchor-h: right;
    --anchor-v: span-top;
  }
  .dropdown-end.dropdown-right .dropdown-content {
    top: auto;
    bottom: calc(0.25rem * 0);
  }
  .dropdown-end {
    --anchor-h: span-left;
  }
  .dropdown-end :where(.dropdown-content) {
    inset-inline-end: calc(0.25rem * 0);
    translate: 0 0;
  }
  .dropdown-end.dropdown-left {
    --anchor-h: left;
    --anchor-v: span-top;
  }
  .dropdown-end.dropdown-left .dropdown-content {
    top: auto;
    bottom: calc(0.25rem * 0);
  }
  .dropdown-end.dropdown-right {
    --anchor-h: right;
    --anchor-v: span-top;
  }
  .dropdown-end.dropdown-right .dropdown-content {
    top: auto;
    bottom: calc(0.25rem * 0);
  }
  .dropdown-bottom {
    --anchor-v: bottom;
  }
  .dropdown-bottom .dropdown-content {
    top: 100%;
    bottom: auto;
    transform-origin: top;
  }
  .dropdown-bottom {
    --anchor-v: bottom;
  }
  .dropdown-bottom .dropdown-content {
    top: 100%;
    bottom: auto;
    transform-origin: top;
  }
  .file-input {
    cursor: pointer;
    cursor: pointer;
    border: var(--border) solid #0000;
    display: inline-flex;
    appearance: none;
    align-items: center;
    background-color: var(--color-base-100);
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    line-height: 2;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .file-input {
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .file-input::file-selector-button {
    margin-inline-end: calc(0.25rem * 4);
    cursor: pointer;
    padding-inline: calc(0.25rem * 4);
    webkit-user-select: none;
    user-select: none;
    height: calc(100% + var(--border) * 2);
    margin-block: calc(var(--border) * -1);
    margin-inline-start: calc(var(--border) * -1);
    font-size: 0.875rem;
    color: var(--btn-fg);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    border-start-start-radius: calc(var(--join-ss, var(--radius-field) - var(--border)));
    border-end-start-radius: calc(var(--join-es, var(--radius-field) - var(--border)));
    font-weight: 600;
    background-color: var(--btn-bg);
    background-size: calc(var(--noise) * 100%);
    background-image: var(--btn-noise);
    text-shadow: 0 0.5px oklch(1 0 0 / calc(var(--depth) * 0.15));
    box-shadow: 0 0.5px 0 0.5px white inset, var(--btn-shadow);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input::file-selector-button {
      box-shadow: 0 0.5px 0 0.5px color-mix( in oklab, color-mix(in oklab, white 30%, var(--btn-bg)) calc(var(--depth) * 20%), #0000 ) inset, var(--btn-shadow);
    }
  }
  .file-input::file-selector-button {
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-border: var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input::file-selector-button {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 5%);
    }
  }
  .file-input::file-selector-button {
    --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input::file-selector-button {
      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000);
    }
  }
  .file-input::file-selector-button {
    --btn-noise: var(--fx-noise);
  }
  .file-input:focus {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:focus {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) 10%, #0000);
    }
  }
  .file-input:focus {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
  }
  .file-input:has(> input[disabled])::placeholder, .file-input:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:has(> input[disabled])::placeholder, .file-input:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
    box-shadow: none;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
      color: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }
  .file-input:has(> input[disabled])::file-selector-button, .file-input:is(:disabled, [disabled])::file-selector-button {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:has(> input[disabled])::file-selector-button, .file-input:is(:disabled, [disabled])::file-selector-button {
      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }
  .file-input {
    cursor: pointer;
    cursor: pointer;
    border: var(--border) solid #0000;
    display: inline-flex;
    appearance: none;
    align-items: center;
    background-color: var(--color-base-100);
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    line-height: 2;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .file-input {
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .file-input::file-selector-button {
    margin-inline-end: calc(0.25rem * 4);
    cursor: pointer;
    padding-inline: calc(0.25rem * 4);
    webkit-user-select: none;
    user-select: none;
    height: calc(100% + var(--border) * 2);
    margin-block: calc(var(--border) * -1);
    margin-inline-start: calc(var(--border) * -1);
    font-size: 0.875rem;
    color: var(--btn-fg);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    border-start-start-radius: calc(var(--join-ss, var(--radius-field) - var(--border)));
    border-end-start-radius: calc(var(--join-es, var(--radius-field) - var(--border)));
    font-weight: 600;
    background-color: var(--btn-bg);
    background-size: calc(var(--noise) * 100%);
    background-image: var(--btn-noise);
    text-shadow: 0 0.5px oklch(1 0 0 / calc(var(--depth) * 0.15));
    box-shadow: 0 0.5px 0 0.5px white inset, var(--btn-shadow);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input::file-selector-button {
      box-shadow: 0 0.5px 0 0.5px color-mix( in oklab, color-mix(in oklab, white 30%, var(--btn-bg)) calc(var(--depth) * 20%), #0000 ) inset, var(--btn-shadow);
    }
  }
  .file-input::file-selector-button {
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-border: var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input::file-selector-button {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 5%);
    }
  }
  .file-input::file-selector-button {
    --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input::file-selector-button {
      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000);
    }
  }
  .file-input::file-selector-button {
    --btn-noise: var(--fx-noise);
  }
  .file-input:focus {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:focus {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) 10%, #0000);
    }
  }
  .file-input:focus {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
  }
  .file-input:has(> input[disabled])::placeholder, .file-input:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:has(> input[disabled])::placeholder, .file-input:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
    box-shadow: none;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
      color: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }
  .file-input:has(> input[disabled])::file-selector-button, .file-input:is(:disabled, [disabled])::file-selector-button {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .file-input:has(> input[disabled])::file-selector-button, .file-input:is(:disabled, [disabled])::file-selector-button {
      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }
  .hero-content {
    isolation: isolate;
    display: flex;
    max-width: 80rem;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 4);
    padding: calc(0.25rem * 4);
  }
  .hero-content {
    isolation: isolate;
    display: flex;
    max-width: 80rem;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 4);
    padding: calc(0.25rem * 4);
  }
  .textarea {
    border: var(--border) solid #0000;
    min-height: calc(0.25rem * 20);
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-block: calc(0.25rem * 2);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    padding-inline-start: 0.75rem;
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    touch-action: manipulation;
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .textarea {
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .textarea textarea {
    appearance: none;
    background-color: transparent;
    border: none;
  }
  .textarea textarea:focus, .textarea textarea:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .textarea textarea:focus, .textarea textarea:focus-within {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .textarea:focus, .textarea:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:focus, .textarea:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .textarea:focus, .textarea:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .textarea:has(> textarea[disabled])::placeholder, .textarea:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:has(> textarea[disabled])::placeholder, .textarea:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
    box-shadow: none;
  }
  .textarea:has(> textarea[disabled]) > textarea[disabled] {
    cursor: not-allowed;
  }
  .textarea {
    border: var(--border) solid #0000;
    min-height: calc(0.25rem * 20);
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-block: calc(0.25rem * 2);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    padding-inline-start: 0.75rem;
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    touch-action: manipulation;
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
  }
  .textarea {
    --input-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
  }
  .textarea textarea {
    appearance: none;
    background-color: transparent;
    border: none;
  }
  .textarea textarea:focus, .textarea textarea:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .textarea textarea:focus, .textarea textarea:focus-within {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .textarea:focus, .textarea:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:focus, .textarea:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    }
  }
  .textarea:focus, .textarea:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .textarea:has(> textarea[disabled])::placeholder, .textarea:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .textarea:has(> textarea[disabled])::placeholder, .textarea:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
    box-shadow: none;
  }
  .textarea:has(> textarea[disabled]) > textarea[disabled] {
    cursor: not-allowed;
  }
  .stack {
    display: inline-grid;
    grid-template-columns: 3px 4px 1fr 4px 3px;
    grid-template-rows: 3px 4px 1fr 4px 3px;
  }
  .stack > * {
    height: 100%;
    width: 100%;
  }
  .stack > *:nth-child(n + 2) {
    width: 100%;
    opacity: 70%;
  }
  .stack > *:nth-child(2) {
    z-index: 2;
    opacity: 90%;
  }
  .stack > *:nth-child(1) {
    z-index: 3;
    width: 100%;
  }
  .stack > *, .stack.stack-bottom > * {
    grid-column: 3 / 4;
    grid-row: 3 / 6;
  }
  .stack > *:nth-child(2), .stack.stack-bottom > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack > *:nth-child(1), .stack.stack-bottom > *:nth-child(1) {
    grid-column: 1 / 6;
    grid-row: 1 / 4;
  }
  .stack.stack-top > * {
    grid-column: 3 / 4;
    grid-row: 1 / 4;
  }
  .stack.stack-top > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack.stack-top > *:nth-child(1) {
    grid-column: 1 / 6;
    grid-row: 3 / 6;
  }
  .stack.stack-start > * {
    grid-column: 1 / 4;
    grid-row: 3 / 4;
  }
  .stack.stack-start > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack.stack-start > *:nth-child(1) {
    grid-column: 3 / 6;
    grid-row: 1 / 6;
  }
  .stack.stack-end > * {
    grid-column: 3 / 6;
    grid-row: 3 / 4;
  }
  .stack.stack-end > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack.stack-end > *:nth-child(1) {
    grid-column: 1 / 4;
    grid-row: 1 / 6;
  }
  .stack {
    display: inline-grid;
    grid-template-columns: 3px 4px 1fr 4px 3px;
    grid-template-rows: 3px 4px 1fr 4px 3px;
  }
  .stack > * {
    height: 100%;
    width: 100%;
  }
  .stack > *:nth-child(n + 2) {
    width: 100%;
    opacity: 70%;
  }
  .stack > *:nth-child(2) {
    z-index: 2;
    opacity: 90%;
  }
  .stack > *:nth-child(1) {
    z-index: 3;
    width: 100%;
  }
  .stack > *, .stack.stack-bottom > * {
    grid-column: 3 / 4;
    grid-row: 3 / 6;
  }
  .stack > *:nth-child(2), .stack.stack-bottom > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack > *:nth-child(1), .stack.stack-bottom > *:nth-child(1) {
    grid-column: 1 / 6;
    grid-row: 1 / 4;
  }
  .stack.stack-top > * {
    grid-column: 3 / 4;
    grid-row: 1 / 4;
  }
  .stack.stack-top > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack.stack-top > *:nth-child(1) {
    grid-column: 1 / 6;
    grid-row: 3 / 6;
  }
  .stack.stack-start > * {
    grid-column: 1 / 4;
    grid-row: 3 / 4;
  }
  .stack.stack-start > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack.stack-start > *:nth-child(1) {
    grid-column: 3 / 6;
    grid-row: 1 / 6;
  }
  .stack.stack-end > * {
    grid-column: 3 / 6;
    grid-row: 3 / 4;
  }
  .stack.stack-end > *:nth-child(2) {
    grid-column: 2 / 5;
    grid-row: 2 / 5;
  }
  .stack.stack-end > *:nth-child(1) {
    grid-column: 1 / 4;
    grid-row: 1 / 6;
  }
  .stack\! {
    display: inline-grid !important;
    grid-template-columns: 3px 4px 1fr 4px 3px !important;
    grid-template-rows: 3px 4px 1fr 4px 3px !important;
  }
  .stack\! > * {
    height: 100% !important;
    width: 100% !important;
  }
  .stack\! > *:nth-child(n + 2) {
    width: 100% !important;
    opacity: 70% !important;
  }
  .stack\! > *:nth-child(2) {
    z-index: 2 !important;
    opacity: 90% !important;
  }
  .stack\! > *:nth-child(1) {
    z-index: 3 !important;
    width: 100% !important;
  }
  .stack\! > *, .stack\!.stack-bottom > * {
    grid-column: 3 / 4 !important;
    grid-row: 3 / 6 !important;
  }
  .stack\! > *:nth-child(2), .stack\!.stack-bottom > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\! > *:nth-child(1), .stack\!.stack-bottom > *:nth-child(1) {
    grid-column: 1 / 6 !important;
    grid-row: 1 / 4 !important;
  }
  .stack\!.stack-top > * {
    grid-column: 3 / 4 !important;
    grid-row: 1 / 4 !important;
  }
  .stack\!.stack-top > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\!.stack-top > *:nth-child(1) {
    grid-column: 1 / 6 !important;
    grid-row: 3 / 6 !important;
  }
  .stack\!.stack-start > * {
    grid-column: 1 / 4 !important;
    grid-row: 3 / 4 !important;
  }
  .stack\!.stack-start > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\!.stack-start > *:nth-child(1) {
    grid-column: 3 / 6 !important;
    grid-row: 1 / 6 !important;
  }
  .stack\!.stack-end > * {
    grid-column: 3 / 6 !important;
    grid-row: 3 / 4 !important;
  }
  .stack\!.stack-end > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\!.stack-end > *:nth-child(1) {
    grid-column: 1 / 4 !important;
    grid-row: 1 / 6 !important;
  }
  .stack\! {
    display: inline-grid !important;
    grid-template-columns: 3px 4px 1fr 4px 3px !important;
    grid-template-rows: 3px 4px 1fr 4px 3px !important;
  }
  .stack\! > * {
    height: 100% !important;
    width: 100% !important;
  }
  .stack\! > *:nth-child(n + 2) {
    width: 100% !important;
    opacity: 70% !important;
  }
  .stack\! > *:nth-child(2) {
    z-index: 2 !important;
    opacity: 90% !important;
  }
  .stack\! > *:nth-child(1) {
    z-index: 3 !important;
    width: 100% !important;
  }
  .stack\! > *, .stack\!.stack-bottom > * {
    grid-column: 3 / 4 !important;
    grid-row: 3 / 6 !important;
  }
  .stack\! > *:nth-child(2), .stack\!.stack-bottom > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\! > *:nth-child(1), .stack\!.stack-bottom > *:nth-child(1) {
    grid-column: 1 / 6 !important;
    grid-row: 1 / 4 !important;
  }
  .stack\!.stack-top > * {
    grid-column: 3 / 4 !important;
    grid-row: 1 / 4 !important;
  }
  .stack\!.stack-top > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\!.stack-top > *:nth-child(1) {
    grid-column: 1 / 6 !important;
    grid-row: 3 / 6 !important;
  }
  .stack\!.stack-start > * {
    grid-column: 1 / 4 !important;
    grid-row: 3 / 4 !important;
  }
  .stack\!.stack-start > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\!.stack-start > *:nth-child(1) {
    grid-column: 3 / 6 !important;
    grid-row: 1 / 6 !important;
  }
  .stack\!.stack-end > * {
    grid-column: 3 / 6 !important;
    grid-row: 3 / 4 !important;
  }
  .stack\!.stack-end > *:nth-child(2) {
    grid-column: 2 / 5 !important;
    grid-row: 2 / 5 !important;
  }
  .stack\!.stack-end > *:nth-child(1) {
    grid-column: 1 / 4 !important;
    grid-row: 1 / 6 !important;
  }
  .z-1 {
    z-index: 1;
  }
  .z-10 {
    z-index: 10;
  }
  .z-30 {
    z-index: 30;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .tab-content {
    order: var(--tabcontent-order);
    display: none;
    border-color: transparent;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: 0;
    --tabcontent-radius-es: 0;
    --tabcontent-radius-ee: 0;
    --tabcontent-order: 1;
    width: 100%;
    margin: var(--tabcontent-margin);
    border-width: var(--border);
    border-start-start-radius: var(--tabcontent-radius-ss);
    border-start-end-radius: var(--tabcontent-radius-se);
    border-end-start-radius: var(--tabcontent-radius-es);
    border-end-end-radius: var(--tabcontent-radius-ee);
  }
  .tab-content {
    order: var(--tabcontent-order);
    display: none;
    border-color: transparent;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: 0;
    --tabcontent-radius-es: 0;
    --tabcontent-radius-ee: 0;
    --tabcontent-order: 1;
    width: 100%;
    margin: var(--tabcontent-margin);
    border-width: var(--border);
    border-start-start-radius: var(--tabcontent-radius-ss);
    border-start-end-radius: var(--tabcontent-radius-se);
    border-end-start-radius: var(--tabcontent-radius-es);
    border-end-end-radius: var(--tabcontent-radius-ee);
  }
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .order-3 {
    order: 3;
  }
  .order-4 {
    order: 4;
  }
  .order-5 {
    order: 5;
  }
  .order-6 {
    order: 6;
  }
  .order-7 {
    order: 7;
  }
  .order-8 {
    order: 8;
  }
  .order-9 {
    order: 9;
  }
  .order-10 {
    order: 10;
  }
  .order-11 {
    order: 11;
  }
  .order-12 {
    order: 12;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .stat-figure {
    grid-column-start: 2;
    grid-row: span 3 / span 3;
    grid-row-start: 1;
    place-self: center;
    justify-self: flex-end;
  }
  .stat-figure {
    grid-column-start: 2;
    grid-row: span 3 / span 3;
    grid-row-start: 1;
    place-self: center;
    justify-self: flex-end;
  }
  .hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center;
  }
  .hero > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center;
  }
  .hero > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .modal-box {
    grid-column-start: 1;
    grid-row-start: 1;
    max-height: 100vh;
    width: calc(11/12 * 100%);
    max-width: 32rem;
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 6);
    transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
    border-top-left-radius: var(--modal-tl, var(--radius-box));
    border-top-right-radius: var(--modal-tr, var(--radius-box));
    border-bottom-left-radius: var(--modal-bl, var(--radius-box));
    border-bottom-right-radius: var(--modal-br, var(--radius-box));
    scale: 95%;
    opacity: 0;
    box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain;
  }
  .modal-box {
    grid-column-start: 1;
    grid-row-start: 1;
    max-height: 100vh;
    width: calc(11/12 * 100%);
    max-width: 32rem;
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 6);
    transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
    border-top-left-radius: var(--modal-tl, var(--radius-box));
    border-top-right-radius: var(--modal-tr, var(--radius-box));
    border-bottom-left-radius: var(--modal-bl, var(--radius-box));
    border-bottom-right-radius: var(--modal-br, var(--radius-box));
    scale: 95%;
    opacity: 0;
    box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain;
  }
  .drawer-content {
    grid-column-start: 2;
    grid-row-start: 1;
    min-width: calc(0.25rem * 0);
  }
  .drawer-content {
    grid-column-start: 2;
    grid-row-start: 1;
    min-width: calc(0.25rem * 0);
  }
  .stat-value {
    grid-column-start: 1;
    white-space: nowrap;
    font-size: 2rem;
    font-weight: 800;
  }
  .stat-value {
    grid-column-start: 1;
    white-space: nowrap;
    font-size: 2rem;
    font-weight: 800;
  }
  .stat-title {
    grid-column-start: 1;
    white-space: nowrap;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .stat-title {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
  }
  .stat-title {
    font-size: 0.75rem;
  }
  .stat-title {
    grid-column-start: 1;
    white-space: nowrap;
    color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .stat-title {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
  }
  .stat-title {
    font-size: 0.75rem;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .container {
    width: 100%;
  }
  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }
  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }
  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }
  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-3 {
    margin: calc(var(--spacing) * 3);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
  }
  .filter input[type="radio"] {
    width: auto;
  }
  .filter input {
    overflow: hidden;
    opacity: 100%;
    scale: 1;
    transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
  }
  .filter input:not(:last-child) {
    margin-inline-end: calc(0.25rem * 1);
  }
  .filter input.filter-reset {
    aspect-ratio: 1 / 1;
  }
  .filter input.filter-reset::after {
    content: "×";
  }
  .filter:not(:has(input:checked:not(.filter-reset))) .filter-reset, .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"] {
    scale: 0;
    border-width: 0;
    margin-inline: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    padding-inline: calc(0.25rem * 0);
    opacity: 0%;
  }
  .filter:has(input:checked:not(.filter-reset)) input:not(:checked, .filter-reset, input[type="reset"]) {
    scale: 0;
    border-width: 0;
    margin-inline: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    padding-inline: calc(0.25rem * 0);
    opacity: 0%;
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
  }
  .filter input[type="radio"] {
    width: auto;
  }
  .filter input {
    overflow: hidden;
    opacity: 100%;
    scale: 1;
    transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
  }
  .filter input:not(:last-child) {
    margin-inline-end: calc(0.25rem * 1);
  }
  .filter input.filter-reset {
    aspect-ratio: 1 / 1;
  }
  .filter input.filter-reset::after {
    content: "×";
  }
  .filter:not(:has(input:checked:not(.filter-reset))) .filter-reset, .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"] {
    scale: 0;
    border-width: 0;
    margin-inline: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    padding-inline: calc(0.25rem * 0);
    opacity: 0%;
  }
  .filter:has(input:checked:not(.filter-reset)) input:not(:checked, .filter-reset, input[type="reset"]) {
    scale: 0;
    border-width: 0;
    margin-inline: calc(0.25rem * 0);
    width: calc(0.25rem * 0);
    padding-inline: calc(0.25rem * 0);
    opacity: 0%;
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-5 {
    margin-inline: calc(var(--spacing) * 5);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .input-sm {
    --size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
  }
  .input-sm[type="number"]::-webkit-inner-spin-button {
    margin-block: calc(0.25rem * -2);
    margin-inline-end: calc(0.25rem * -3);
  }
  .input-sm {
    --size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
  }
  .input-sm[type="number"]::-webkit-inner-spin-button {
    margin-block: calc(0.25rem * -2);
    margin-inline-end: calc(0.25rem * -3);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-1\.5 {
    margin-block: calc(var(--spacing) * 1.5);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .label {
    display: inline-flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    white-space: nowrap;
    color: currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label {
      color: color-mix(in oklab, currentColor 60%, transparent);
    }
  }
  .label:has(input) {
    cursor: pointer;
  }
  .label:is(.input > *, .select > *) {
    display: flex;
    height: calc(100% - 0.5rem);
    align-items: center;
    padding-inline: calc(0.25rem * 3);
    white-space: nowrap;
    font-size: inherit;
  }
  .label:is(.input > *, .select > *):first-child {
    margin-inline-start: calc(0.25rem * -3);
    margin-inline-end: calc(0.25rem * 3);
    border-inline-end: var(--border) solid currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label:is(.input > *, .select > *):first-child {
      border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .label:is(.input > *, .select > *):last-child {
    margin-inline-start: calc(0.25rem * 3);
    margin-inline-end: calc(0.25rem * -3);
    border-inline-start: var(--border) solid currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label:is(.input > *, .select > *):last-child {
      border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .label {
    display: inline-flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    white-space: nowrap;
    color: currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label {
      color: color-mix(in oklab, currentColor 60%, transparent);
    }
  }
  .label:has(input) {
    cursor: pointer;
  }
  .label:is(.input > *, .select > *) {
    display: flex;
    height: calc(100% - 0.5rem);
    align-items: center;
    padding-inline: calc(0.25rem * 3);
    white-space: nowrap;
    font-size: inherit;
  }
  .label:is(.input > *, .select > *):first-child {
    margin-inline-start: calc(0.25rem * -3);
    margin-inline-end: calc(0.25rem * 3);
    border-inline-end: var(--border) solid currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label:is(.input > *, .select > *):first-child {
      border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .label:is(.input > *, .select > *):last-child {
    margin-inline-start: calc(0.25rem * 3);
    margin-inline-end: calc(0.25rem * -3);
    border-inline-start: var(--border) solid currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .label:is(.input > *, .select > *):last-child {
      border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .join-item:where(*:not(:first-child, :disabled, [disabled], .btn-disabled)) {
    margin-inline-start: calc(var(--border, 1px) * -1);
    margin-block-start: 0;
  }
  .join-item:where(*:is(:disabled, [disabled], .btn-disabled)) {
    border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
  }
  .join-item:where(*:not(:first-child, :disabled, [disabled], .btn-disabled)) {
    margin-inline-start: calc(var(--border, 1px) * -1);
    margin-block-start: 0;
  }
  .join-item:where(*:is(:disabled, [disabled], .btn-disabled)) {
    border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .modal-action {
    margin-top: calc(0.25rem * 6);
    display: flex;
    justify-content: flex-end;
    gap: calc(0.25rem * 2);
  }
  .modal-action {
    margin-top: calc(0.25rem * 6);
    display: flex;
    justify-content: flex-end;
    gap: calc(0.25rem * 2);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .status {
      background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .status {
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: color-mix(in srgb, #000 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .status {
      color: color-mix(in srgb, #000 30%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .status {
        color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
    }
  }
  .status {
    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
    box-shadow: 0 2px 3px -1px currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .status {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
    }
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    background-color: var(--color-base-content);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .status {
      background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }
  .status {
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: color-mix(in srgb, #000 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .status {
      color: color-mix(in srgb, #000 30%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .status {
        color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
    }
  }
  .status {
    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
    box-shadow: 0 2px 3px -1px currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .status {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
    }
  }
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--badge-fg);
    border: var(--border) solid var(--badge-color, var(--color-base-200));
    font-size: 0.875rem;
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-bg);
    --badge-bg: var(--badge-color, var(--color-base-100));
    --badge-fg: var(--color-base-content);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
  }
  .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--badge-fg);
    border: var(--border) solid var(--badge-color, var(--color-base-200));
    font-size: 0.875rem;
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    background-color: var(--badge-bg);
    --badge-bg: var(--badge-color, var(--color-base-100));
    --badge-fg: var(--color-base-content);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--size);
  }
  .tabs {
    display: flex;
    flex-wrap: wrap;
    --tabs-height: auto;
    --tabs-direction: row;
    --tab-height: calc(var(--size-field, 0.25rem) * 10);
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .tabs {
    display: flex;
    flex-wrap: wrap;
    --tabs-height: auto;
    --tabs-direction: row;
    --tab-height: calc(var(--size-field, 0.25rem) * 10);
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: 0.5rem;
    min-height: 4rem;
  }
  .navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: 0.5rem;
    min-height: 4rem;
  }
  .footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 10);
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
  .footer > * {
    display: grid;
    place-items: start;
    gap: calc(0.25rem * 2);
  }
  .footer.footer-center {
    grid-auto-flow: column dense;
    place-items: center;
    text-align: center;
  }
  .footer.footer-center > * {
    place-items: center;
  }
  .footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 10);
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
  .footer > * {
    display: grid;
    place-items: start;
    gap: calc(0.25rem * 2);
  }
  .footer.footer-center {
    grid-auto-flow: column dense;
    place-items: center;
    text-align: center;
  }
  .footer.footer-center > * {
    place-items: center;
  }
  .stat {
    display: inline-grid;
    width: 100%;
    column-gap: calc(0.25rem * 4);
    padding-inline: calc(0.25rem * 6);
    padding-block: calc(0.25rem * 4);
    grid-template-columns: repeat(1, 1fr);
  }
  .stat:not(:last-child) {
    border-inline-end: var(--border) dashed currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .stat:not(:last-child) {
      border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .stat:not(:last-child) {
    border-block-end: none;
  }
  .stat {
    display: inline-grid;
    width: 100%;
    column-gap: calc(0.25rem * 4);
    padding-inline: calc(0.25rem * 6);
    padding-block: calc(0.25rem * 4);
    grid-template-columns: repeat(1, 1fr);
  }
  .stat:not(:last-child) {
    border-inline-end: var(--border) dashed currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .stat:not(:last-child) {
      border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .stat:not(:last-child) {
    border-block-end: none;
  }
  .card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--card-p, 1.5rem);
    font-size: var(--card-fs, 0.875rem);
  }
  .card-body :where(p) {
    flex-grow: 1;
  }
  .card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--card-p, 1.5rem);
    font-size: var(--card-fs, 0.875rem);
  }
  .card-body :where(p) {
    flex-grow: 1;
  }
  .alert {
    display: grid;
    align-items: center;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    font-size: 0.875rem;
    line-height: 1.25rem;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert {
      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    }
  }
  .alert:has(:nth-child(2)) {
    grid-template-columns: auto minmax(auto, 1fr);
  }
  .alert.alert-outline {
    background-color: transparent;
    color: var(--alert-color);
    box-shadow: none;
    background-image: none;
  }
  .alert.alert-dash {
    background-color: transparent;
    color: var(--alert-color);
    border-style: dashed;
    box-shadow: none;
    background-image: none;
  }
  .alert.alert-soft {
    color: var(--alert-color, var(--color-base-content));
    background: var(--alert-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert.alert-soft {
      background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
    }
  }
  .alert.alert-soft {
    border-color: var(--alert-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert.alert-soft {
      border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
    }
  }
  .alert.alert-soft {
    box-shadow: none;
    background-image: none;
  }
  .alert {
    display: grid;
    align-items: center;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    font-size: 0.875rem;
    line-height: 1.25rem;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert {
      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    }
  }
  .alert:has(:nth-child(2)) {
    grid-template-columns: auto minmax(auto, 1fr);
  }
  .alert.alert-outline {
    background-color: transparent;
    color: var(--alert-color);
    box-shadow: none;
    background-image: none;
  }
  .alert.alert-dash {
    background-color: transparent;
    color: var(--alert-color);
    border-style: dashed;
    box-shadow: none;
    background-image: none;
  }
  .alert.alert-soft {
    color: var(--alert-color, var(--color-base-content));
    background: var(--alert-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert.alert-soft {
      background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
    }
  }
  .alert.alert-soft {
    border-color: var(--alert-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .alert.alert-soft {
      border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
    }
  }
  .alert.alert-soft {
    box-shadow: none;
    background-image: none;
  }
  .fieldset {
    display: grid;
    gap: calc(0.25rem * 1.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
    grid-template-columns: 1fr;
    grid-auto-rows: max-content;
  }
  .fieldset {
    display: grid;
    gap: calc(0.25rem * 1.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
    grid-template-columns: 1fr;
    grid-auto-rows: max-content;
  }
  .card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: calc(0.25rem * 2);
  }
  .card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: calc(0.25rem * 2);
  }
  .card-title {
    display: flex;
    align-items: center;
    gap: calc(0.25rem * 2);
    font-size: var(--cardtitle-fs, 1.125rem);
    font-weight: 600;
  }
  .card-title {
    display: flex;
    align-items: center;
    gap: calc(0.25rem * 2);
    font-size: var(--cardtitle-fs, 1.125rem);
    font-weight: 600;
  }
  .join {
    display: inline-flex;
    align-items: stretch;
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
  }
  .join :where(.join-item) {
    border-start-start-radius: var(--join-ss, 0);
    border-start-end-radius: var(--join-se, 0);
    border-end-start-radius: var(--join-es, 0);
    border-end-end-radius: var(--join-ee, 0);
  }
  .join :where(.join-item) * {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }
  .join > .join-item:where(:first-child) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0;
  }
  .join :first-child:not(:last-child) :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0;
  }
  .join > .join-item:where(:last-child) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field);
  }
  .join :last-child:not(:first-child) :where(.join-item) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field);
  }
  .join > .join-item:where(:only-child) {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }
  .join :only-child :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }
  .join {
    display: inline-flex;
    align-items: stretch;
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
  }
  .join :where(.join-item) {
    border-start-start-radius: var(--join-ss, 0);
    border-start-end-radius: var(--join-se, 0);
    border-end-start-radius: var(--join-es, 0);
    border-end-end-radius: var(--join-ee, 0);
  }
  .join :where(.join-item) * {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }
  .join > .join-item:where(:first-child) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0;
  }
  .join :first-child:not(:last-child) :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0;
  }
  .join > .join-item:where(:last-child) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field);
  }
  .join :last-child:not(:first-child) :where(.join-item) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field);
  }
  .join > .join-item:where(:only-child) {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }
  .join :only-child :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }
  .mask {
    display: inline-block;
    vertical-align: middle;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
  }
  .mask {
    display: inline-block;
    vertical-align: middle;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .table-header-group {
    display: table-header-group;
  }
  .divider-horizontal {
    --divider-m: 0 1rem;
  }
  .divider-horizontal.divider {
    height: auto;
    width: calc(0.25rem * 4);
    flex-direction: column;
  }
  .divider-horizontal.divider:before {
    height: 100%;
    width: calc(0.25rem * 0.5);
  }
  .divider-horizontal.divider:after {
    height: 100%;
    width: calc(0.25rem * 0.5);
  }
  .divider-horizontal {
    --divider-m: 0 1rem;
  }
  .divider-horizontal.divider {
    height: auto;
    width: calc(0.25rem * 4);
    flex-direction: column;
  }
  .divider-horizontal.divider:before {
    height: 100%;
    width: calc(0.25rem * 0.5);
  }
  .divider-horizontal.divider:after {
    height: 100%;
    width: calc(0.25rem * 0.5);
  }
  .btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-\[1\.2em\] {
    width: 1.2em;
    height: 1.2em;
  }
  .status-md {
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
  }
  .status-md {
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-28 {
    height: calc(var(--spacing) * 28);
  }
  .h-62 {
    height: calc(var(--spacing) * 62);
  }
  .h-72 {
    height: calc(var(--spacing) * 72);
  }
  .h-76 {
    height: calc(var(--spacing) * 76);
  }
  .h-full {
    height: 100%;
  }
  .min-h-\[89vh\] {
    min-height: 89vh;
  }
  .min-h-full {
    min-height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .btn-block {
    width: 100%;
  }
  .btn-block {
    width: 100%;
  }
  .loading-xl {
    width: calc(var(--size-selector, 0.25rem) * 8);
  }
  .loading-xl {
    width: calc(var(--size-selector, 0.25rem) * 8);
  }
  .w-1\/4 {
    width: calc(1/4 * 100%);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-3\/5 {
    width: calc(3/5 * 100%);
  }
  .w-4\/5 {
    width: calc(4/5 * 100%);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-30 {
    width: calc(var(--spacing) * 30);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-52 {
    width: calc(var(--spacing) * 52);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .min-w-full {
    min-width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-2\/5 {
    flex: calc(2/5 * 100%);
  }
  .flex-3\/5 {
    flex: calc(3/5 * 100%);
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .table-auto {
    table-layout: auto;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .scale-125 {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-300);
  }
  @media (prefers-reduced-motion: reduce) {
    .skeleton {
      transition-duration: 15s;
    }
  }
  .skeleton {
    will-change: background-position;
    animation: skeleton 1.8s ease-in-out infinite;
    background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
    background-size: 200% auto;
    background-repeat: no-repeat;
    background-position-x: -50%;
  }
  .skeleton {
    border-radius: var(--radius-box);
    background-color: var(--color-base-300);
  }
  @media (prefers-reduced-motion: reduce) {
    .skeleton {
      transition-duration: 15s;
    }
  }
  .skeleton {
    will-change: background-position;
    animation: skeleton 1.8s ease-in-out infinite;
    background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
    background-size: 200% auto;
    background-repeat: no-repeat;
    background-position-x: -50%;
  }
  .link {
    cursor: pointer;
    text-decoration-line: underline;
  }
  .link:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .link:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  .link {
    cursor: pointer;
    text-decoration-line: underline;
  }
  .link:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .link:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  .resize {
    resize: both;
  }
  .auto-cols-max {
    grid-auto-columns: max-content;
  }
  .alert-horizontal {
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
  }
  .alert-horizontal:has(:nth-child(2)) {
    grid-template-columns: auto minmax(auto, 1fr);
  }
  .alert-horizontal {
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
  }
  .alert-horizontal:has(:nth-child(2)) {
    grid-template-columns: auto minmax(auto, 1fr);
  }
  .stats-vertical {
    grid-auto-flow: row;
    overflow-y: auto;
  }
  .stats-vertical .stat:not(:last-child) {
    border-inline-end: none;
    border-block-end: var(--border) dashed currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .stats-vertical .stat:not(:last-child) {
      border-block-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .stats-vertical {
    grid-auto-flow: row;
    overflow-y: auto;
  }
  .stats-vertical .stat:not(:last-child) {
    border-inline-end: none;
    border-block-end: var(--border) dashed currentColor;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .stats-vertical .stat:not(:last-child) {
      border-block-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .grid-flow-col {
    grid-auto-flow: column;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }
  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }
  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }
  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }
  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }
  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }
  .place-self-center {
    place-self: center;
  }
  .self-start {
    align-self: flex-start;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .menu-sm :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 2.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
  }
  .menu-sm .menu-title {
    padding-inline: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 2);
  }
  .menu-sm :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--radius-field);
    padding-inline: calc(0.25rem * 2.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
  }
  .menu-sm .menu-title {
    padding-inline: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 2);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .badge-ghost {
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
    background-image: none;
  }
  .badge-ghost {
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
    background-image: none;
  }
  .alert-error {
    border-color: var(--color-error);
    color: var(--color-error-content);
    --alert-color: var(--color-error);
  }
  .alert-error {
    border-color: var(--color-error);
    color: var(--color-error-content);
    --alert-color: var(--color-error);
  }
  .border-base-300 {
    border-color: var(--color-base-300);
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-400 {
    border-color: var(--color-gray-400);
  }
  .border-red-600 {
    border-color: var(--color-red-600);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-b-transparent {
    border-bottom-color: transparent;
  }
  .glass {
    border: none;
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: #0000;
    background-image: linear-gradient( 135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100% ), linear-gradient( var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
    box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
    text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
  }
  .glass {
    border: none;
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: #0000;
    background-image: linear-gradient( 135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100% ), linear-gradient( var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
    box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
    text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
  }
  .status-info {
    background-color: var(--color-info);
    color: var(--color-info);
  }
  .status-info {
    background-color: var(--color-info);
    color: var(--color-info);
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-200 {
    background-color: var(--color-base-200);
  }
  .bg-base-300 {
    background-color: var(--color-base-300);
  }
  .bg-base-300\/40 {
    background-color: var(--color-base-300);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-base-300\/40 {
      background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
    }
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-500\/50 {
    background-color: color-mix(in srgb, oklch(55.1% 0.027 264.364) 50%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-500\/50 {
      background-color: color-mix(in oklab, var(--color-gray-500) 50%, transparent);
    }
  }
  .bg-neutral {
    background-color: var(--color-neutral);
  }
  .bg-red-800 {
    background-color: var(--color-red-800);
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-sky-800 {
    background-color: var(--color-sky-800);
  }
  .bg-slate-600 {
    background-color: var(--color-slate-600);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/15 {
    background-color: color-mix(in srgb, #fff 15%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/15 {
      background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .loading-dots {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
  }
  .loading-dots {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
  }
  .mask-squircle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
  }
  .mask-squircle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .pr-5 {
    padding-right: calc(var(--spacing) * 5);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-serif {
    font-family: var(--font-serif);
  }
  .file-input-sm {
    --size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
    line-height: 1.5rem;
  }
  .file-input-sm::file-selector-button {
    font-size: 0.75rem;
  }
  .file-input-sm {
    --size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
    line-height: 1.5rem;
  }
  .file-input-sm::file-selector-button {
    font-size: 0.75rem;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[9px\] {
    font-size: 9px;
  }
  .leading-normal {
    --tw-leading: var(--leading-normal);
    line-height: var(--leading-normal);
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-normal {
    --tw-tracking: var(--tracking-normal);
    letter-spacing: var(--tracking-normal);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .file-input-info {
    --btn-color: var(--color-info);
  }
  .file-input-info::file-selector-button {
    color: var(--color-info-content);
  }
  .file-input-info, .file-input-info:focus, .file-input-info:focus-within {
    --input-color: var(--color-info);
  }
  .file-input-info {
    --btn-color: var(--color-info);
  }
  .file-input-info::file-selector-button {
    color: var(--color-info-content);
  }
  .file-input-info, .file-input-info:focus, .file-input-info:focus-within {
    --input-color: var(--color-info);
  }
  .link-info {
    color: var(--color-info);
  }
  @media (hover: hover) {
    .link-info:hover {
      color: var(--color-info);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .link-info:hover {
        color: color-mix(in oklab, var(--color-info) 80%, #000);
      }
    }
  }
  .link-info {
    color: var(--color-info);
  }
  @media (hover: hover) {
    .link-info:hover {
      color: var(--color-info);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .link-info:hover {
        color: color-mix(in oklab, var(--color-info) 80%, #000);
      }
    }
  }
  .text-accent {
    color: var(--color-accent);
  }
  .text-base-300 {
    color: var(--color-base-300);
  }
  .text-base-content {
    color: var(--color-base-content);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-error {
    color: var(--color-error);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-info {
    color: var(--color-info);
  }
  .text-neutral-content {
    color: var(--color-neutral-content);
  }
  .text-red-300 {
    color: var(--color-red-300);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-slate-50 {
    color: var(--color-slate-50);
  }
  .text-slate-900 {
    color: var(--color-slate-900);
  }
  .text-slate-950 {
    color: var(--color-slate-950);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .underline-offset-1 {
    text-underline-offset: 1px;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-gray-800 {
    --tw-shadow-color: oklch(27.8% 0.033 256.848);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .shadow-gray-800 {
      --tw-shadow-color: color-mix(in oklab, var(--color-gray-800) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-white {
    --tw-shadow-color: #fff;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .shadow-white {
      --tw-shadow-color: color-mix(in oklab, var(--color-white) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-red-900 {
    --tw-ring-color: var(--color-red-900);
  }
  .ring-sky-900 {
    --tw-ring-color: var(--color-sky-900);
  }
  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;
  }
  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
    outline-color: currentColor;
    --btn-fg: currentColor;
  }
  @media (hover: none) {
    .btn-ghost:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: currentColor;
    }
  }
  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;
  }
  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
    outline-color: currentColor;
    --btn-fg: currentColor;
  }
  @media (hover: none) {
    .btn-ghost:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: currentColor;
    }
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-75 {
    transition-delay: 75ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .btn-outline:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
  }
  @media (hover: none) {
    .btn-outline:hover:not( .btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
    }
  }
  .btn-outline:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
  }
  @media (hover: none) {
    .btn-outline:hover:not( .btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
    }
  }
  .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
    --btn-shadow: "";
    --btn-fg: var(--btn-color, var(--color-base-content));
    --btn-bg: var(--btn-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
    }
  }
  .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
    --btn-border: var(--btn-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-border: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
    }
  }
  .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
    --btn-noise: none;
  }
  @media (hover: none) {
    .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-shadow: "";
      --btn-fg: var(--btn-color, var(--color-base-content));
      --btn-bg: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
        --btn-bg: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 8%,
        var(--color-base-100)
      );
      }
    }
    .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-border: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
        --btn-border: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 10%,
        var(--color-base-100)
      );
      }
    }
    .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-noise: none;
    }
  }
  .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
    --btn-shadow: "";
    --btn-fg: var(--btn-color, var(--color-base-content));
    --btn-bg: var(--btn-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
    }
  }
  .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
    --btn-border: var(--btn-color, var(--color-base-content));
  }
  @supports (color: color-mix(in lab, red, red)) {
    .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-border: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
    }
  }
  .btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
    --btn-noise: none;
  }
  @media (hover: none) {
    .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-shadow: "";
      --btn-fg: var(--btn-color, var(--color-base-content));
      --btn-bg: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
        --btn-bg: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 8%,
        var(--color-base-100)
      );
      }
    }
    .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-border: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
      .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
        --btn-border: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 10%,
        var(--color-base-100)
      );
      }
    }
    .btn-soft:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-noise: none;
    }
  }
  .btn-md {
    --fontsize: 0.875rem;
    --btn-p: 1rem;
    --size: calc(var(--size-field, 0.25rem) * 10);
  }
  .btn-md {
    --fontsize: 0.875rem;
    --btn-p: 1rem;
    --size: calc(var(--size-field, 0.25rem) * 10);
  }
  .btn-sm {
    --fontsize: 0.75rem;
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 8);
  }
  .btn-sm {
    --fontsize: 0.75rem;
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 8);
  }
  .btn-xs {
    --fontsize: 0.6875rem;
    --btn-p: 0.5rem;
    --size: calc(var(--size-field, 0.25rem) * 6);
  }
  .btn-xs {
    --fontsize: 0.6875rem;
    --btn-p: 0.5rem;
    --size: calc(var(--size-field, 0.25rem) * 6);
  }
  .badge-accent {
    --badge-color: var(--color-accent);
    --badge-fg: var(--color-accent-content);
  }
  .badge-accent {
    --badge-color: var(--color-accent);
    --badge-fg: var(--color-accent-content);
  }
  .badge-error {
    --badge-color: var(--color-error);
    --badge-fg: var(--color-error-content);
  }
  .badge-error {
    --badge-color: var(--color-error);
    --badge-fg: var(--color-error-content);
  }
  .badge-info {
    --badge-color: var(--color-info);
    --badge-fg: var(--color-info-content);
  }
  .badge-info {
    --badge-color: var(--color-info);
    --badge-fg: var(--color-info-content);
  }
  .badge-success {
    --badge-color: var(--color-success);
    --badge-fg: var(--color-success-content);
  }
  .badge-success {
    --badge-color: var(--color-success);
    --badge-fg: var(--color-success-content);
  }
  .badge-warning {
    --badge-color: var(--color-warning);
    --badge-fg: var(--color-warning-content);
  }
  .badge-warning {
    --badge-color: var(--color-warning);
    --badge-fg: var(--color-warning-content);
  }
  .btn-accent {
    --btn-color: var(--color-accent);
    --btn-fg: var(--color-accent-content);
  }
  .btn-accent {
    --btn-color: var(--color-accent);
    --btn-fg: var(--color-accent-content);
  }
  .btn-error {
    --btn-color: var(--color-error);
    --btn-fg: var(--color-error-content);
  }
  .btn-error {
    --btn-color: var(--color-error);
    --btn-fg: var(--color-error-content);
  }
  .btn-info {
    --btn-color: var(--color-info);
    --btn-fg: var(--color-info-content);
  }
  .btn-info {
    --btn-color: var(--color-info);
    --btn-fg: var(--color-info-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .btn-secondary {
    --btn-color: var(--color-secondary);
    --btn-fg: var(--color-secondary-content);
  }
  .btn-secondary {
    --btn-color: var(--color-secondary);
    --btn-fg: var(--color-secondary-content);
  }
  .btn-success {
    --btn-color: var(--color-success);
    --btn-fg: var(--color-success-content);
  }
  .btn-success {
    --btn-color: var(--color-success);
    --btn-fg: var(--color-success-content);
  }
  .btn-warning {
    --btn-color: var(--color-warning);
    --btn-fg: var(--color-warning-content);
  }
  .btn-warning {
    --btn-color: var(--color-warning);
    --btn-fg: var(--color-warning-content);
  }
  .input-info, .input-info:focus, .input-info:focus-within {
    --input-color: var(--color-info);
  }
  .input-info, .input-info:focus, .input-info:focus-within {
    --input-color: var(--color-info);
  }
  .select-info, .select-info:focus, .select-info:focus-within {
    --input-color: var(--color-info);
  }
  .select-info, .select-info:focus, .select-info:focus-within {
    --input-color: var(--color-info);
  }
  .textarea-info, .textarea-info:focus, .textarea-info:focus-within {
    --input-color: var(--color-info);
  }
  .textarea-info, .textarea-info:focus, .textarea-info:focus-within {
    --input-color: var(--color-info);
  }
  .before\:absolute::before {
    content: var(--tw-content);
    position: absolute;
  }
  .before\:right-0::before {
    content: var(--tw-content);
    right: calc(var(--spacing) * 0);
  }
  .before\:block::before {
    content: var(--tw-content);
    display: block;
  }
  .before\:h-3::before {
    content: var(--tw-content);
    height: calc(var(--spacing) * 3);
  }
  .before\:w-3::before {
    content: var(--tw-content);
    width: calc(var(--spacing) * 3);
  }
  .before\:rounded-full::before {
    content: var(--tw-content);
    border-radius: calc(infinity * 1px);
  }
  .empty\:sr-only:empty {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  @media (hover: hover) {
    .hover\:overflow-visible:hover {
      overflow: visible;
    }
  }
  @media (hover: hover) {
    .hover\:border-b-white:hover {
      border-bottom-color: var(--color-white);
    }
  }
  @media (hover: hover) {
    .hover\:bg-gray-400:hover {
      background-color: var(--color-gray-400);
    }
  }
  @media (hover: hover) {
    .hover\:text-white:hover {
      color: var(--color-white);
    }
  }
  @media (hover: hover) {
    .hover\:ring:hover {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  @media (hover: hover) {
    .hover\:ring-1:hover {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  @media (hover: hover) {
    .hover\:ring-2:hover {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  @media (hover: hover) {
    .hover\:ring-blue-800:hover {
      --tw-ring-color: var(--color-blue-800);
    }
  }
  @media (hover: hover) {
    .hover\:ring-red-400:hover {
      --tw-ring-color: var(--color-red-400);
    }
  }
  @media (hover: hover) {
    .hover\:ring-red-950:hover {
      --tw-ring-color: var(--color-red-950);
    }
  }
  @media (hover: hover) {
    .hover\:ring-sky-950:hover {
      --tw-ring-color: var(--color-sky-950);
    }
  }
  @media (prefers-reduced-motion: no-preference) {
    .motion-safe\:animate-ping {
      animation: var(--animate-ping);
    }
  }
  @media (width >= 40rem) {
    .sm\:col-span-1 {
      grid-column: span 1 / span 1;
    }
  }
  @media (width >= 40rem) {
    .sm\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }
  @media (width >= 40rem) {
    .sm\:stats-horizontal {
      grid-auto-flow: column;
      overflow-x: auto;
    }
    .sm\:stats-horizontal .stat:not(:last-child) {
      border-inline-end: var(--border) dashed currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .sm\:stats-horizontal .stat:not(:last-child) {
        border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
      }
    }
    .sm\:stats-horizontal .stat:not(:last-child) {
      border-block-end: none;
    }
  }
  @media (width >= 40rem) {
    .sm\:stats-horizontal {
      grid-auto-flow: column;
      overflow-x: auto;
    }
    .sm\:stats-horizontal .stat:not(:last-child) {
      border-inline-end: var(--border) dashed currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .sm\:stats-horizontal .stat:not(:last-child) {
        border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
      }
    }
    .sm\:stats-horizontal .stat:not(:last-child) {
      border-block-end: none;
    }
  }
  @media (width >= 40rem) {
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  @media (width >= 40rem) {
    .sm\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  @media (width >= 48rem) {
    .md\:order-9 {
      order: 9;
    }
  }
  @media (width >= 48rem) {
    .md\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }
  @media (width >= 48rem) {
    .md\:row-span-2 {
      grid-row: span 2 / span 2;
    }
  }
  @media (width >= 48rem) {
    .md\:mx-auto {
      margin-inline: auto;
    }
  }
  @media (width >= 48rem) {
    .md\:w-1\/2 {
      width: calc(1/2 * 100%);
    }
  }
  @media (width >= 48rem) {
    .md\:w-2\/3 {
      width: calc(2/3 * 100%);
    }
  }
  @media (width >= 48rem) {
    .md\:w-3\/4 {
      width: calc(3/4 * 100%);
    }
  }
  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  @media (width >= 48rem) {
    .md\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-xs {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  @media (width >= 64rem) {
    .lg\:order-5 {
      order: 5;
    }
  }
  @media (width >= 64rem) {
    .lg\:order-6 {
      order: 6;
    }
  }
  @media (width >= 64rem) {
    .lg\:order-7 {
      order: 7;
    }
  }
  @media (width >= 64rem) {
    .lg\:order-11 {
      order: 11;
    }
  }
  @media (width >= 64rem) {
    .lg\:order-12 {
      order: 12;
    }
  }
  @media (width >= 64rem) {
    .lg\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }
  @media (width >= 64rem) {
    .lg\:mx-auto {
      margin-inline: auto;
    }
  }
  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }
  @media (width >= 64rem) {
    .lg\:inline {
      display: inline;
    }
  }
  @media (width >= 64rem) {
    .lg\:w-1\/2 {
      width: calc(1/2 * 100%);
    }
  }
  @media (width >= 64rem) {
    .lg\:w-2\/3 {
      width: calc(2/3 * 100%);
    }
  }
  @media (width >= 64rem) {
    .lg\:w-3\/4 {
      width: calc(3/4 * 100%);
    }
  }
  @media (width >= 64rem) {
    .lg\:flex-2\/3 {
      flex: calc(2/3 * 100%);
    }
  }
  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  @media (width >= 64rem) {
    .lg\:grid-cols-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  @media (width >= 64rem) {
    .lg\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  @media (width >= 64rem) {
    .lg\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  @media (width >= 80rem) {
    .xl\:w-4\/5 {
      width: calc(4/5 * 100%);
    }
  }
  @media (width >= 80rem) {
    .xl\:w-5\/6 {
      width: calc(5/6 * 100%);
    }
  }
  .dark\:border-gray-600:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    border-color: var(--color-gray-600);
  }
  .dark\:bg-blue-950:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    background-color: var(--color-blue-950);
  }
  .dark\:bg-gray-800:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    background-color: var(--color-gray-800);
  }
  .dark\:text-amber-50:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    color: var(--color-amber-50);
  }
  .dark\:text-black:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    color: var(--color-black);
  }
  .dark\:text-gray-300:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    color: var(--color-gray-300);
  }
  .dark\:text-gray-400:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    color: var(--color-gray-400);
  }
  .dark\:text-white:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    color: var(--color-white);
  }
  .dark\:text-zinc-50:where(
  [data-theme=dark],
  [data-theme=night],
  [data-theme=forest],
  [data-theme=luxury],
  [data-theme=dracula],
  [data-theme=black],
  [data-theme=dim],
  [data-theme=business],
  [data-theme=synthwave],
  [data-theme=halloween],
  [data-theme=coffee],
  [data-theme=cyberpunk],
  [data-theme=dark] *,
  [data-theme=night] *,
  [data-theme=forest] *,
  [data-theme=luxury] *,
  [data-theme=dracula] *,
  [data-theme=black] *,
  [data-theme=dim] *,
  [data-theme=business] *,
  [data-theme=synthwave] *,
  [data-theme=halloween] *,
  [data-theme=coffee] *,
  [data-theme=cyberpunk] *,
  [data-theme=sunset] *,
  [data-theme=aqua] *,) {
    color: var(--color-zinc-50);
  }
  @media print {
    .print\:hidden {
      display: none;
    }
  }
  @media print {
    .print\:max-w-full {
      max-width: 100%;
    }
  }
  @media print {
    .print\:bg-white {
      background-color: var(--color-white);
    }
  }
  @media print {
    .print\:p-2 {
      padding: calc(var(--spacing) * 2);
    }
  }
  @media print {
    .print\:shadow-none {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
  }
  @supports (color: color-mix(in lab, red, red)) {
    :root {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: var(--color-base-100);
  }
  @supports (color: color-mix(in lab, red, red)) {
    :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(.modal-start, .modal-end) {
    scrollbar-gutter: stable;
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=cupcake]:checked),[data-theme=cupcake] {
    color-scheme: light;
    --color-base-100: oklch(97.788% 0.004 56.375);
    --color-base-200: oklch(93.982% 0.007 61.449);
    --color-base-300: oklch(91.586% 0.006 53.44);
    --color-base-content: oklch(23.574% 0.066 313.189);
    --color-primary: oklch(85% 0.138 181.071);
    --color-primary-content: oklch(43% 0.078 188.216);
    --color-secondary: oklch(89% 0.061 343.231);
    --color-secondary-content: oklch(45% 0.187 3.815);
    --color-accent: oklch(90% 0.076 70.697);
    --color-accent-content: oklch(47% 0.157 37.304);
    --color-neutral: oklch(27% 0.006 286.033);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(68% 0.169 237.323);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(69% 0.17 162.48);
    --color-success-content: oklch(26% 0.051 172.552);
    --color-warning: oklch(79% 0.184 86.047);
    --color-warning-content: oklch(28% 0.066 53.813);
    --color-error: oklch(64% 0.246 16.439);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=bumblebee]:checked),[data-theme=bumblebee] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97% 0 0);
    --color-base-300: oklch(92% 0 0);
    --color-base-content: oklch(20% 0 0);
    --color-primary: oklch(85% 0.199 91.936);
    --color-primary-content: oklch(42% 0.095 57.708);
    --color-secondary: oklch(75% 0.183 55.934);
    --color-secondary-content: oklch(40% 0.123 38.172);
    --color-accent: oklch(0% 0 0);
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(37% 0.01 67.558);
    --color-neutral-content: oklch(92% 0.003 48.717);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(39% 0.09 240.876);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(70% 0.191 22.216);
    --color-error-content: oklch(39% 0.141 25.723);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=emerald]:checked),[data-theme=emerald] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(93% 0 0);
    --color-base-300: oklch(86% 0 0);
    --color-base-content: oklch(35.519% 0.032 262.988);
    --color-primary: oklch(76.662% 0.135 153.45);
    --color-primary-content: oklch(33.387% 0.04 162.24);
    --color-secondary: oklch(61.302% 0.202 261.294);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(72.772% 0.149 33.2);
    --color-accent-content: oklch(0% 0 0);
    --color-neutral: oklch(35.519% 0.032 262.988);
    --color-neutral-content: oklch(98.462% 0.001 247.838);
    --color-info: oklch(72.06% 0.191 231.6);
    --color-info-content: oklch(0% 0 0);
    --color-success: oklch(64.8% 0.15 160);
    --color-success-content: oklch(0% 0 0);
    --color-warning: oklch(84.71% 0.199 83.87);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(71.76% 0.221 22.18);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=corporate]:checked),[data-theme=corporate] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(93% 0 0);
    --color-base-300: oklch(86% 0 0);
    --color-base-content: oklch(22.389% 0.031 278.072);
    --color-primary: oklch(58% 0.158 241.966);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(55% 0.046 257.417);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(60% 0.118 184.704);
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(0% 0 0);
    --color-neutral-content: oklch(100% 0 0);
    --color-info: oklch(60% 0.126 221.723);
    --color-info-content: oklch(100% 0 0);
    --color-success: oklch(62% 0.194 149.214);
    --color-success-content: oklch(100% 0 0);
    --color-warning: oklch(85% 0.199 91.936);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(70% 0.191 22.216);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 0.25rem;
    --radius-field: 0.25rem;
    --radius-box: 0.25rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=synthwave]:checked),[data-theme=synthwave] {
    color-scheme: dark;
    --color-base-100: oklch(15% 0.09 281.288);
    --color-base-200: oklch(20% 0.09 281.288);
    --color-base-300: oklch(25% 0.09 281.288);
    --color-base-content: oklch(78% 0.115 274.713);
    --color-primary: oklch(71% 0.202 349.761);
    --color-primary-content: oklch(28% 0.109 3.907);
    --color-secondary: oklch(82% 0.111 230.318);
    --color-secondary-content: oklch(29% 0.066 243.157);
    --color-accent: oklch(75% 0.183 55.934);
    --color-accent-content: oklch(26% 0.079 36.259);
    --color-neutral: oklch(45% 0.24 277.023);
    --color-neutral-content: oklch(87% 0.065 274.039);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(77% 0.152 181.912);
    --color-success-content: oklch(27% 0.046 192.524);
    --color-warning: oklch(90% 0.182 98.111);
    --color-warning-content: oklch(42% 0.095 57.708);
    --color-error: oklch(73.7% 0.121 32.639);
    --color-error-content: oklch(23.501% 0.096 290.329);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=retro]:checked),[data-theme=retro] {
    color-scheme: light;
    --color-base-100: oklch(91.637% 0.034 90.515);
    --color-base-200: oklch(88.272% 0.049 91.774);
    --color-base-300: oklch(84.133% 0.065 90.856);
    --color-base-content: oklch(41% 0.112 45.904);
    --color-primary: oklch(80% 0.114 19.571);
    --color-primary-content: oklch(39% 0.141 25.723);
    --color-secondary: oklch(92% 0.084 155.995);
    --color-secondary-content: oklch(44% 0.119 151.328);
    --color-accent: oklch(68% 0.162 75.834);
    --color-accent-content: oklch(41% 0.112 45.904);
    --color-neutral: oklch(44% 0.011 73.639);
    --color-neutral-content: oklch(86% 0.005 56.366);
    --color-info: oklch(58% 0.158 241.966);
    --color-info-content: oklch(96% 0.059 95.617);
    --color-success: oklch(51% 0.096 186.391);
    --color-success-content: oklch(96% 0.059 95.617);
    --color-warning: oklch(64% 0.222 41.116);
    --color-warning-content: oklch(96% 0.059 95.617);
    --color-error: oklch(70% 0.191 22.216);
    --color-error-content: oklch(40% 0.123 38.172);
    --radius-selector: 0.25rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=cyberpunk]:checked),[data-theme=cyberpunk] {
    color-scheme: light;
    --color-base-100: oklch(94.51% 0.179 104.32);
    --color-base-200: oklch(91.51% 0.179 104.32);
    --color-base-300: oklch(85.51% 0.179 104.32);
    --color-base-content: oklch(0% 0 0);
    --color-primary: oklch(74.22% 0.209 6.35);
    --color-primary-content: oklch(14.844% 0.041 6.35);
    --color-secondary: oklch(83.33% 0.184 204.72);
    --color-secondary-content: oklch(16.666% 0.036 204.72);
    --color-accent: oklch(71.86% 0.217 310.43);
    --color-accent-content: oklch(14.372% 0.043 310.43);
    --color-neutral: oklch(23.04% 0.065 269.31);
    --color-neutral-content: oklch(94.51% 0.179 104.32);
    --color-info: oklch(72.06% 0.191 231.6);
    --color-info-content: oklch(0% 0 0);
    --color-success: oklch(64.8% 0.15 160);
    --color-success-content: oklch(0% 0 0);
    --color-warning: oklch(84.71% 0.199 83.87);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(71.76% 0.221 22.18);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=valentine]:checked),[data-theme=valentine] {
    color-scheme: light;
    --color-base-100: oklch(97% 0.014 343.198);
    --color-base-200: oklch(94% 0.028 342.258);
    --color-base-300: oklch(89% 0.061 343.231);
    --color-base-content: oklch(52% 0.223 3.958);
    --color-primary: oklch(65% 0.241 354.308);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(62% 0.265 303.9);
    --color-secondary-content: oklch(97% 0.014 308.299);
    --color-accent: oklch(82% 0.111 230.318);
    --color-accent-content: oklch(39% 0.09 240.876);
    --color-neutral: oklch(40% 0.153 2.432);
    --color-neutral-content: oklch(89% 0.061 343.231);
    --color-info: oklch(86% 0.127 207.078);
    --color-info-content: oklch(44% 0.11 240.79);
    --color-success: oklch(84% 0.143 164.978);
    --color-success-content: oklch(43% 0.095 166.913);
    --color-warning: oklch(75% 0.183 55.934);
    --color-warning-content: oklch(26% 0.079 36.259);
    --color-error: oklch(63% 0.237 25.331);
    --color-error-content: oklch(97% 0.013 17.38);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=halloween]:checked),[data-theme=halloween] {
    color-scheme: dark;
    --color-base-100: oklch(21% 0.006 56.043);
    --color-base-200: oklch(14% 0.004 49.25);
    --color-base-300: oklch(0% 0 0);
    --color-base-content: oklch(84.955% 0 0);
    --color-primary: oklch(77.48% 0.204 60.62);
    --color-primary-content: oklch(19.693% 0.004 196.779);
    --color-secondary: oklch(45.98% 0.248 305.03);
    --color-secondary-content: oklch(89.196% 0.049 305.03);
    --color-accent: oklch(64.8% 0.223 136.073);
    --color-accent-content: oklch(0% 0 0);
    --color-neutral: oklch(24.371% 0.046 65.681);
    --color-neutral-content: oklch(84.874% 0.009 65.681);
    --color-info: oklch(54.615% 0.215 262.88);
    --color-info-content: oklch(90.923% 0.043 262.88);
    --color-success: oklch(62.705% 0.169 149.213);
    --color-success-content: oklch(12.541% 0.033 149.213);
    --color-warning: oklch(66.584% 0.157 58.318);
    --color-warning-content: oklch(13.316% 0.031 58.318);
    --color-error: oklch(65.72% 0.199 27.33);
    --color-error-content: oklch(13.144% 0.039 27.33);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=garden]:checked),[data-theme=garden] {
    color-scheme: light;
    --color-base-100: oklch(92.951% 0.002 17.197);
    --color-base-200: oklch(86.445% 0.002 17.197);
    --color-base-300: oklch(79.938% 0.001 17.197);
    --color-base-content: oklch(16.961% 0.001 17.32);
    --color-primary: oklch(62.45% 0.278 3.836);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(48.495% 0.11 355.095);
    --color-secondary-content: oklch(89.699% 0.022 355.095);
    --color-accent: oklch(56.273% 0.054 154.39);
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(24.155% 0.049 89.07);
    --color-neutral-content: oklch(92.951% 0.002 17.197);
    --color-info: oklch(72.06% 0.191 231.6);
    --color-info-content: oklch(0% 0 0);
    --color-success: oklch(64.8% 0.15 160);
    --color-success-content: oklch(0% 0 0);
    --color-warning: oklch(84.71% 0.199 83.87);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(71.76% 0.221 22.18);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=forest]:checked),[data-theme=forest] {
    color-scheme: dark;
    --color-base-100: oklch(20.84% 0.008 17.911);
    --color-base-200: oklch(18.522% 0.007 17.911);
    --color-base-300: oklch(16.203% 0.007 17.911);
    --color-base-content: oklch(83.768% 0.001 17.911);
    --color-primary: oklch(68.628% 0.185 148.958);
    --color-primary-content: oklch(0% 0 0);
    --color-secondary: oklch(69.776% 0.135 168.327);
    --color-secondary-content: oklch(13.955% 0.027 168.327);
    --color-accent: oklch(70.628% 0.119 185.713);
    --color-accent-content: oklch(14.125% 0.023 185.713);
    --color-neutral: oklch(30.698% 0.039 171.364);
    --color-neutral-content: oklch(86.139% 0.007 171.364);
    --color-info: oklch(72.06% 0.191 231.6);
    --color-info-content: oklch(0% 0 0);
    --color-success: oklch(64.8% 0.15 160);
    --color-success-content: oklch(0% 0 0);
    --color-warning: oklch(84.71% 0.199 83.87);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(71.76% 0.221 22.18);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=aqua]:checked),[data-theme=aqua] {
    color-scheme: dark;
    --color-base-100: oklch(37% 0.146 265.522);
    --color-base-200: oklch(28% 0.091 267.935);
    --color-base-300: oklch(22% 0.091 267.935);
    --color-base-content: oklch(90% 0.058 230.902);
    --color-primary: oklch(85.661% 0.144 198.645);
    --color-primary-content: oklch(40.124% 0.068 197.603);
    --color-secondary: oklch(60.682% 0.108 309.782);
    --color-secondary-content: oklch(96% 0.016 293.756);
    --color-accent: oklch(93.426% 0.102 94.555);
    --color-accent-content: oklch(18.685% 0.02 94.555);
    --color-neutral: oklch(27% 0.146 265.522);
    --color-neutral-content: oklch(80% 0.146 265.522);
    --color-info: oklch(54.615% 0.215 262.88);
    --color-info-content: oklch(90.923% 0.043 262.88);
    --color-success: oklch(62.705% 0.169 149.213);
    --color-success-content: oklch(12.541% 0.033 149.213);
    --color-warning: oklch(66.584% 0.157 58.318);
    --color-warning-content: oklch(27% 0.077 45.635);
    --color-error: oklch(73.95% 0.19 27.33);
    --color-error-content: oklch(14.79% 0.038 27.33);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=lofi]:checked),[data-theme=lofi] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97% 0 0);
    --color-base-300: oklch(94% 0 0);
    --color-base-content: oklch(0% 0 0);
    --color-primary: oklch(15.906% 0 0);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(21.455% 0.001 17.278);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(26.861% 0 0);
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(0% 0 0);
    --color-neutral-content: oklch(100% 0 0);
    --color-info: oklch(79.54% 0.103 205.9);
    --color-info-content: oklch(15.908% 0.02 205.9);
    --color-success: oklch(90.13% 0.153 164.14);
    --color-success-content: oklch(18.026% 0.03 164.14);
    --color-warning: oklch(88.37% 0.135 79.94);
    --color-warning-content: oklch(17.674% 0.027 79.94);
    --color-error: oklch(78.66% 0.15 28.47);
    --color-error-content: oklch(15.732% 0.03 28.47);
    --radius-selector: 2rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=pastel]:checked),[data-theme=pastel] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98.462% 0.001 247.838);
    --color-base-300: oklch(92.462% 0.001 247.838);
    --color-base-content: oklch(20% 0 0);
    --color-primary: oklch(90% 0.063 306.703);
    --color-primary-content: oklch(49% 0.265 301.924);
    --color-secondary: oklch(89% 0.058 10.001);
    --color-secondary-content: oklch(51% 0.222 16.935);
    --color-accent: oklch(90% 0.093 164.15);
    --color-accent-content: oklch(50% 0.118 165.612);
    --color-neutral: oklch(55% 0.046 257.417);
    --color-neutral-content: oklch(92% 0.013 255.508);
    --color-info: oklch(86% 0.127 207.078);
    --color-info-content: oklch(52% 0.105 223.128);
    --color-success: oklch(87% 0.15 154.449);
    --color-success-content: oklch(52% 0.154 150.069);
    --color-warning: oklch(83% 0.128 66.29);
    --color-warning-content: oklch(55% 0.195 38.402);
    --color-error: oklch(80% 0.114 19.571);
    --color-error-content: oklch(50% 0.213 27.518);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=fantasy]:checked),[data-theme=fantasy] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(93% 0 0);
    --color-base-300: oklch(86% 0 0);
    --color-base-content: oklch(27.807% 0.029 256.847);
    --color-primary: oklch(37.45% 0.189 325.02);
    --color-primary-content: oklch(87.49% 0.037 325.02);
    --color-secondary: oklch(53.92% 0.162 241.36);
    --color-secondary-content: oklch(90.784% 0.032 241.36);
    --color-accent: oklch(75.98% 0.204 56.72);
    --color-accent-content: oklch(15.196% 0.04 56.72);
    --color-neutral: oklch(27.807% 0.029 256.847);
    --color-neutral-content: oklch(85.561% 0.005 256.847);
    --color-info: oklch(72.06% 0.191 231.6);
    --color-info-content: oklch(0% 0 0);
    --color-success: oklch(64.8% 0.15 160);
    --color-success-content: oklch(0% 0 0);
    --color-warning: oklch(84.71% 0.199 83.87);
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(71.76% 0.221 22.18);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=wireframe]:checked),[data-theme=wireframe] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97% 0 0);
    --color-base-300: oklch(94% 0 0);
    --color-base-content: oklch(20% 0 0);
    --color-primary: oklch(87% 0 0);
    --color-primary-content: oklch(26% 0 0);
    --color-secondary: oklch(87% 0 0);
    --color-secondary-content: oklch(26% 0 0);
    --color-accent: oklch(87% 0 0);
    --color-accent-content: oklch(26% 0 0);
    --color-neutral: oklch(87% 0 0);
    --color-neutral-content: oklch(26% 0 0);
    --color-info: oklch(44% 0.11 240.79);
    --color-info-content: oklch(90% 0.058 230.902);
    --color-success: oklch(43% 0.095 166.913);
    --color-success-content: oklch(90% 0.093 164.15);
    --color-warning: oklch(47% 0.137 46.201);
    --color-warning-content: oklch(92% 0.12 95.746);
    --color-error: oklch(44% 0.177 26.899);
    --color-error-content: oklch(88% 0.062 18.334);
    --radius-selector: 0rem;
    --radius-field: 0.25rem;
    --radius-box: 0.25rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=black]:checked),[data-theme=black] {
    color-scheme: dark;
    --color-base-100: oklch(0% 0 0);
    --color-base-200: oklch(19% 0 0);
    --color-base-300: oklch(22% 0 0);
    --color-base-content: oklch(87.609% 0 0);
    --color-primary: oklch(35% 0 0);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(35% 0 0);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(35% 0 0);
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(35% 0 0);
    --color-neutral-content: oklch(100% 0 0);
    --color-info: oklch(45.201% 0.313 264.052);
    --color-info-content: oklch(89.04% 0.062 264.052);
    --color-success: oklch(51.975% 0.176 142.495);
    --color-success-content: oklch(90.395% 0.035 142.495);
    --color-warning: oklch(96.798% 0.211 109.769);
    --color-warning-content: oklch(19.359% 0.042 109.769);
    --color-error: oklch(62.795% 0.257 29.233);
    --color-error-content: oklch(12.559% 0.051 29.233);
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=luxury]:checked),[data-theme=luxury] {
    color-scheme: dark;
    --color-base-100: oklch(14.076% 0.004 285.822);
    --color-base-200: oklch(20.219% 0.004 308.229);
    --color-base-300: oklch(23.219% 0.004 308.229);
    --color-base-content: oklch(75.687% 0.123 76.89);
    --color-primary: oklch(100% 0 0);
    --color-primary-content: oklch(20% 0 0);
    --color-secondary: oklch(27.581% 0.064 261.069);
    --color-secondary-content: oklch(85.516% 0.012 261.069);
    --color-accent: oklch(36.674% 0.051 338.825);
    --color-accent-content: oklch(87.334% 0.01 338.825);
    --color-neutral: oklch(24.27% 0.057 59.825);
    --color-neutral-content: oklch(93.203% 0.089 90.861);
    --color-info: oklch(79.061% 0.121 237.133);
    --color-info-content: oklch(15.812% 0.024 237.133);
    --color-success: oklch(78.119% 0.192 132.154);
    --color-success-content: oklch(15.623% 0.038 132.154);
    --color-warning: oklch(86.127% 0.136 102.891);
    --color-warning-content: oklch(17.225% 0.027 102.891);
    --color-error: oklch(71.753% 0.176 22.568);
    --color-error-content: oklch(14.35% 0.035 22.568);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dracula]:checked),[data-theme=dracula] {
    color-scheme: dark;
    --color-base-100: oklch(28.822% 0.022 277.508);
    --color-base-200: oklch(26.805% 0.02 277.508);
    --color-base-300: oklch(24.787% 0.019 277.508);
    --color-base-content: oklch(97.747% 0.007 106.545);
    --color-primary: oklch(75.461% 0.183 346.812);
    --color-primary-content: oklch(15.092% 0.036 346.812);
    --color-secondary: oklch(74.202% 0.148 301.883);
    --color-secondary-content: oklch(14.84% 0.029 301.883);
    --color-accent: oklch(83.392% 0.124 66.558);
    --color-accent-content: oklch(16.678% 0.024 66.558);
    --color-neutral: oklch(39.445% 0.032 275.524);
    --color-neutral-content: oklch(87.889% 0.006 275.524);
    --color-info: oklch(88.263% 0.093 212.846);
    --color-info-content: oklch(17.652% 0.018 212.846);
    --color-success: oklch(87.099% 0.219 148.024);
    --color-success-content: oklch(17.419% 0.043 148.024);
    --color-warning: oklch(95.533% 0.134 112.757);
    --color-warning-content: oklch(19.106% 0.026 112.757);
    --color-error: oklch(68.22% 0.206 24.43);
    --color-error-content: oklch(13.644% 0.041 24.43);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=cmyk]:checked),[data-theme=cmyk] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(95% 0 0);
    --color-base-300: oklch(90% 0 0);
    --color-base-content: oklch(20% 0 0);
    --color-primary: oklch(71.772% 0.133 239.443);
    --color-primary-content: oklch(14.354% 0.026 239.443);
    --color-secondary: oklch(64.476% 0.202 359.339);
    --color-secondary-content: oklch(12.895% 0.04 359.339);
    --color-accent: oklch(94.228% 0.189 105.306);
    --color-accent-content: oklch(18.845% 0.037 105.306);
    --color-neutral: oklch(21.778% 0 0);
    --color-neutral-content: oklch(84.355% 0 0);
    --color-info: oklch(68.475% 0.094 217.284);
    --color-info-content: oklch(13.695% 0.018 217.284);
    --color-success: oklch(46.949% 0.162 321.406);
    --color-success-content: oklch(89.389% 0.032 321.406);
    --color-warning: oklch(71.236% 0.159 52.023);
    --color-warning-content: oklch(14.247% 0.031 52.023);
    --color-error: oklch(62.013% 0.208 28.717);
    --color-error-content: oklch(12.402% 0.041 28.717);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=autumn]:checked),[data-theme=autumn] {
    color-scheme: light;
    --color-base-100: oklch(95.814% 0 0);
    --color-base-200: oklch(89.107% 0 0);
    --color-base-300: oklch(82.4% 0 0);
    --color-base-content: oklch(19.162% 0 0);
    --color-primary: oklch(40.723% 0.161 17.53);
    --color-primary-content: oklch(88.144% 0.032 17.53);
    --color-secondary: oklch(61.676% 0.169 23.865);
    --color-secondary-content: oklch(12.335% 0.033 23.865);
    --color-accent: oklch(73.425% 0.094 60.729);
    --color-accent-content: oklch(14.685% 0.018 60.729);
    --color-neutral: oklch(54.367% 0.037 51.902);
    --color-neutral-content: oklch(90.873% 0.007 51.902);
    --color-info: oklch(69.224% 0.097 207.284);
    --color-info-content: oklch(13.844% 0.019 207.284);
    --color-success: oklch(60.995% 0.08 174.616);
    --color-success-content: oklch(12.199% 0.016 174.616);
    --color-warning: oklch(70.081% 0.164 56.844);
    --color-warning-content: oklch(14.016% 0.032 56.844);
    --color-error: oklch(53.07% 0.241 24.16);
    --color-error-content: oklch(90.614% 0.048 24.16);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=business]:checked),[data-theme=business] {
    color-scheme: dark;
    --color-base-100: oklch(24.353% 0 0);
    --color-base-200: oklch(22.648% 0 0);
    --color-base-300: oklch(20.944% 0 0);
    --color-base-content: oklch(84.87% 0 0);
    --color-primary: oklch(41.703% 0.099 251.473);
    --color-primary-content: oklch(88.34% 0.019 251.473);
    --color-secondary: oklch(64.092% 0.027 229.389);
    --color-secondary-content: oklch(12.818% 0.005 229.389);
    --color-accent: oklch(67.271% 0.167 35.791);
    --color-accent-content: oklch(13.454% 0.033 35.791);
    --color-neutral: oklch(27.441% 0.013 253.041);
    --color-neutral-content: oklch(85.488% 0.002 253.041);
    --color-info: oklch(62.616% 0.143 240.033);
    --color-info-content: oklch(12.523% 0.028 240.033);
    --color-success: oklch(70.226% 0.094 156.596);
    --color-success-content: oklch(14.045% 0.018 156.596);
    --color-warning: oklch(77.482% 0.115 81.519);
    --color-warning-content: oklch(15.496% 0.023 81.519);
    --color-error: oklch(51.61% 0.146 29.674);
    --color-error-content: oklch(90.322% 0.029 29.674);
    --radius-selector: 0rem;
    --radius-field: 0.25rem;
    --radius-box: 0.25rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=acid]:checked),[data-theme=acid] {
    color-scheme: light;
    --color-base-100: oklch(98% 0 0);
    --color-base-200: oklch(95% 0 0);
    --color-base-300: oklch(91% 0 0);
    --color-base-content: oklch(0% 0 0);
    --color-primary: oklch(71.9% 0.357 330.759);
    --color-primary-content: oklch(14.38% 0.071 330.759);
    --color-secondary: oklch(73.37% 0.224 48.25);
    --color-secondary-content: oklch(14.674% 0.044 48.25);
    --color-accent: oklch(92.78% 0.264 122.962);
    --color-accent-content: oklch(18.556% 0.052 122.962);
    --color-neutral: oklch(21.31% 0.128 278.68);
    --color-neutral-content: oklch(84.262% 0.025 278.68);
    --color-info: oklch(60.72% 0.227 252.05);
    --color-info-content: oklch(12.144% 0.045 252.05);
    --color-success: oklch(85.72% 0.266 158.53);
    --color-success-content: oklch(17.144% 0.053 158.53);
    --color-warning: oklch(91.01% 0.212 100.5);
    --color-warning-content: oklch(18.202% 0.042 100.5);
    --color-error: oklch(64.84% 0.293 29.349);
    --color-error-content: oklch(12.968% 0.058 29.349);
    --radius-selector: 1rem;
    --radius-field: 1rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=lemonade]:checked),[data-theme=lemonade] {
    color-scheme: light;
    --color-base-100: oklch(98.71% 0.02 123.72);
    --color-base-200: oklch(91.8% 0.018 123.72);
    --color-base-300: oklch(84.89% 0.017 123.72);
    --color-base-content: oklch(19.742% 0.004 123.72);
    --color-primary: oklch(58.92% 0.199 134.6);
    --color-primary-content: oklch(11.784% 0.039 134.6);
    --color-secondary: oklch(77.75% 0.196 111.09);
    --color-secondary-content: oklch(15.55% 0.039 111.09);
    --color-accent: oklch(85.39% 0.201 100.73);
    --color-accent-content: oklch(17.078% 0.04 100.73);
    --color-neutral: oklch(30.98% 0.075 108.6);
    --color-neutral-content: oklch(86.196% 0.015 108.6);
    --color-info: oklch(86.19% 0.047 224.14);
    --color-info-content: oklch(17.238% 0.009 224.14);
    --color-success: oklch(86.19% 0.047 157.85);
    --color-success-content: oklch(17.238% 0.009 157.85);
    --color-warning: oklch(86.19% 0.047 102.15);
    --color-warning-content: oklch(17.238% 0.009 102.15);
    --color-error: oklch(86.19% 0.047 25.85);
    --color-error-content: oklch(17.238% 0.009 25.85);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=night]:checked),[data-theme=night] {
    color-scheme: dark;
    --color-base-100: oklch(20.768% 0.039 265.754);
    --color-base-200: oklch(19.314% 0.037 265.754);
    --color-base-300: oklch(17.86% 0.034 265.754);
    --color-base-content: oklch(84.153% 0.007 265.754);
    --color-primary: oklch(75.351% 0.138 232.661);
    --color-primary-content: oklch(15.07% 0.027 232.661);
    --color-secondary: oklch(68.011% 0.158 276.934);
    --color-secondary-content: oklch(13.602% 0.031 276.934);
    --color-accent: oklch(72.36% 0.176 350.048);
    --color-accent-content: oklch(14.472% 0.035 350.048);
    --color-neutral: oklch(27.949% 0.036 260.03);
    --color-neutral-content: oklch(85.589% 0.007 260.03);
    --color-info: oklch(68.455% 0.148 237.251);
    --color-info-content: oklch(0% 0 0);
    --color-success: oklch(78.452% 0.132 181.911);
    --color-success-content: oklch(15.69% 0.026 181.911);
    --color-warning: oklch(83.242% 0.139 82.95);
    --color-warning-content: oklch(16.648% 0.027 82.95);
    --color-error: oklch(71.785% 0.17 13.118);
    --color-error-content: oklch(14.357% 0.034 13.118);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=coffee]:checked),[data-theme=coffee] {
    color-scheme: dark;
    --color-base-100: oklch(24% 0.023 329.708);
    --color-base-200: oklch(21% 0.021 329.708);
    --color-base-300: oklch(16% 0.019 329.708);
    --color-base-content: oklch(72.354% 0.092 79.129);
    --color-primary: oklch(71.996% 0.123 62.756);
    --color-primary-content: oklch(14.399% 0.024 62.756);
    --color-secondary: oklch(34.465% 0.029 199.194);
    --color-secondary-content: oklch(86.893% 0.005 199.194);
    --color-accent: oklch(42.621% 0.074 224.389);
    --color-accent-content: oklch(88.524% 0.014 224.389);
    --color-neutral: oklch(16.51% 0.015 326.261);
    --color-neutral-content: oklch(83.302% 0.003 326.261);
    --color-info: oklch(79.49% 0.063 184.558);
    --color-info-content: oklch(15.898% 0.012 184.558);
    --color-success: oklch(74.722% 0.072 131.116);
    --color-success-content: oklch(14.944% 0.014 131.116);
    --color-warning: oklch(88.15% 0.14 87.722);
    --color-warning-content: oklch(17.63% 0.028 87.722);
    --color-error: oklch(77.318% 0.128 31.871);
    --color-error-content: oklch(15.463% 0.025 31.871);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=winter]:checked),[data-theme=winter] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(97.466% 0.011 259.822);
    --color-base-300: oklch(93.268% 0.016 262.751);
    --color-base-content: oklch(41.886% 0.053 255.824);
    --color-primary: oklch(56.86% 0.255 257.57);
    --color-primary-content: oklch(91.372% 0.051 257.57);
    --color-secondary: oklch(42.551% 0.161 282.339);
    --color-secondary-content: oklch(88.51% 0.032 282.339);
    --color-accent: oklch(59.939% 0.191 335.171);
    --color-accent-content: oklch(11.988% 0.038 335.171);
    --color-neutral: oklch(19.616% 0.063 257.651);
    --color-neutral-content: oklch(83.923% 0.012 257.651);
    --color-info: oklch(88.127% 0.085 214.515);
    --color-info-content: oklch(17.625% 0.017 214.515);
    --color-success: oklch(80.494% 0.077 197.823);
    --color-success-content: oklch(16.098% 0.015 197.823);
    --color-warning: oklch(89.172% 0.045 71.47);
    --color-warning-content: oklch(17.834% 0.009 71.47);
    --color-error: oklch(73.092% 0.11 20.076);
    --color-error-content: oklch(14.618% 0.022 20.076);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dim]:checked),[data-theme=dim] {
    color-scheme: dark;
    --color-base-100: oklch(30.857% 0.023 264.149);
    --color-base-200: oklch(28.036% 0.019 264.182);
    --color-base-300: oklch(26.346% 0.018 262.177);
    --color-base-content: oklch(82.901% 0.031 222.959);
    --color-primary: oklch(86.133% 0.141 139.549);
    --color-primary-content: oklch(17.226% 0.028 139.549);
    --color-secondary: oklch(73.375% 0.165 35.353);
    --color-secondary-content: oklch(14.675% 0.033 35.353);
    --color-accent: oklch(74.229% 0.133 311.379);
    --color-accent-content: oklch(14.845% 0.026 311.379);
    --color-neutral: oklch(24.731% 0.02 264.094);
    --color-neutral-content: oklch(82.901% 0.031 222.959);
    --color-info: oklch(86.078% 0.142 206.182);
    --color-info-content: oklch(17.215% 0.028 206.182);
    --color-success: oklch(86.171% 0.142 166.534);
    --color-success-content: oklch(17.234% 0.028 166.534);
    --color-warning: oklch(86.163% 0.142 94.818);
    --color-warning-content: oklch(17.232% 0.028 94.818);
    --color-error: oklch(82.418% 0.099 33.756);
    --color-error-content: oklch(16.483% 0.019 33.756);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=nord]:checked),[data-theme=nord] {
    color-scheme: light;
    --color-base-100: oklch(95.127% 0.007 260.731);
    --color-base-200: oklch(93.299% 0.01 261.788);
    --color-base-300: oklch(89.925% 0.016 262.749);
    --color-base-content: oklch(32.437% 0.022 264.182);
    --color-primary: oklch(59.435% 0.077 254.027);
    --color-primary-content: oklch(11.887% 0.015 254.027);
    --color-secondary: oklch(69.651% 0.059 248.687);
    --color-secondary-content: oklch(13.93% 0.011 248.687);
    --color-accent: oklch(77.464% 0.062 217.469);
    --color-accent-content: oklch(15.492% 0.012 217.469);
    --color-neutral: oklch(45.229% 0.035 264.131);
    --color-neutral-content: oklch(89.925% 0.016 262.749);
    --color-info: oklch(69.207% 0.062 332.664);
    --color-info-content: oklch(13.841% 0.012 332.664);
    --color-success: oklch(76.827% 0.074 131.063);
    --color-success-content: oklch(15.365% 0.014 131.063);
    --color-warning: oklch(85.486% 0.089 84.093);
    --color-warning-content: oklch(17.097% 0.017 84.093);
    --color-error: oklch(60.61% 0.12 15.341);
    --color-error-content: oklch(12.122% 0.024 15.341);
    --radius-selector: 1rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=sunset]:checked),[data-theme=sunset] {
    color-scheme: dark;
    --color-base-100: oklch(22% 0.019 237.69);
    --color-base-200: oklch(20% 0.019 237.69);
    --color-base-300: oklch(18% 0.019 237.69);
    --color-base-content: oklch(77.383% 0.043 245.096);
    --color-primary: oklch(74.703% 0.158 39.947);
    --color-primary-content: oklch(14.94% 0.031 39.947);
    --color-secondary: oklch(72.537% 0.177 2.72);
    --color-secondary-content: oklch(14.507% 0.035 2.72);
    --color-accent: oklch(71.294% 0.166 299.844);
    --color-accent-content: oklch(14.258% 0.033 299.844);
    --color-neutral: oklch(26% 0.019 237.69);
    --color-neutral-content: oklch(70% 0.019 237.69);
    --color-info: oklch(85.559% 0.085 206.015);
    --color-info-content: oklch(17.111% 0.017 206.015);
    --color-success: oklch(85.56% 0.085 144.778);
    --color-success-content: oklch(17.112% 0.017 144.778);
    --color-warning: oklch(85.569% 0.084 74.427);
    --color-warning-content: oklch(17.113% 0.016 74.427);
    --color-error: oklch(85.511% 0.078 16.886);
    --color-error-content: oklch(17.102% 0.015 16.886);
    --radius-selector: 1rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=caramellatte]:checked),[data-theme=caramellatte] {
    color-scheme: light;
    --color-base-100: oklch(98% 0.016 73.684);
    --color-base-200: oklch(95% 0.038 75.164);
    --color-base-300: oklch(90% 0.076 70.697);
    --color-base-content: oklch(40% 0.123 38.172);
    --color-primary: oklch(0% 0 0);
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(22.45% 0.075 37.85);
    --color-secondary-content: oklch(90% 0.076 70.697);
    --color-accent: oklch(46.44% 0.111 37.85);
    --color-accent-content: oklch(90% 0.076 70.697);
    --color-neutral: oklch(55% 0.195 38.402);
    --color-neutral-content: oklch(98% 0.016 73.684);
    --color-info: oklch(42% 0.199 265.638);
    --color-info-content: oklch(90% 0.076 70.697);
    --color-success: oklch(43% 0.095 166.913);
    --color-success-content: oklch(90% 0.076 70.697);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(70% 0.191 22.216);
    --color-error-content: oklch(39% 0.141 25.723);
    --radius-selector: 2rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 1;
    --noise: 1;
  }
}
@layer base {
  :root:has(input.theme-controller[value=abyss]:checked),[data-theme=abyss] {
    color-scheme: dark;
    --color-base-100: oklch(20% 0.08 209);
    --color-base-200: oklch(15% 0.08 209);
    --color-base-300: oklch(10% 0.08 209);
    --color-base-content: oklch(90% 0.076 70.697);
    --color-primary: oklch(92% 0.2653 125);
    --color-primary-content: oklch(50% 0.2653 125);
    --color-secondary: oklch(83.27% 0.0764 298.3);
    --color-secondary-content: oklch(43.27% 0.0764 298.3);
    --color-accent: oklch(43% 0 0);
    --color-accent-content: oklch(98% 0 0);
    --color-neutral: oklch(30% 0.08 209);
    --color-neutral-content: oklch(90% 0.076 70.697);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(79% 0.209 151.711);
    --color-success-content: oklch(26% 0.065 152.934);
    --color-warning: oklch(84.8% 0.1962 84.62);
    --color-warning-content: oklch(44.8% 0.1962 84.62);
    --color-error: oklch(65% 0.1985 24.22);
    --color-error-content: oklch(27% 0.1985 24.22);
    --radius-selector: 2rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=silk]:checked),[data-theme=silk] {
    color-scheme: light;
    --color-base-100: oklch(97% 0.0035 67.78);
    --color-base-200: oklch(95% 0.0081 61.42);
    --color-base-300: oklch(90% 0.0081 61.42);
    --color-base-content: oklch(40% 0.0081 61.42);
    --color-primary: oklch(23.27% 0.0249 284.3);
    --color-primary-content: oklch(94.22% 0.2505 117.44);
    --color-secondary: oklch(23.27% 0.0249 284.3);
    --color-secondary-content: oklch(73.92% 0.2135 50.94);
    --color-accent: oklch(23.27% 0.0249 284.3);
    --color-accent-content: oklch(88.92% 0.2061 189.9);
    --color-neutral: oklch(20% 0 0);
    --color-neutral-content: oklch(80% 0.0081 61.42);
    --color-info: oklch(80.39% 0.1148 241.68);
    --color-info-content: oklch(30.39% 0.1148 241.68);
    --color-success: oklch(83.92% 0.0901 136.87);
    --color-success-content: oklch(23.92% 0.0901 136.87);
    --color-warning: oklch(83.92% 0.1085 80);
    --color-warning-content: oklch(43.92% 0.1085 80);
    --color-error: oklch(75.1% 0.1814 22.37);
    --color-error-content: oklch(35.1% 0.1814 22.37);
    --radius-selector: 2rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
  }
  @supports (color: color-mix(in lab, red, red)) {
    :root {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: var(--color-base-100);
  }
  @supports (color: color-mix(in lab, red, red)) {
    :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(.modal-start, .modal-end) {
    scrollbar-gutter: stable;
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=desk]:checked),[data-theme="desk"] {
    color-scheme: light;
    --color-base-100: oklch(96% 0.007 247.896);
    --color-base-200: oklch(96% 0.003 264.542);
    --color-base-300: oklch(92% 0.006 264.531);
    --color-base-content: oklch(0% 0 0);
    --color-primary: oklch(55% 0.046 257.417);
    --color-primary-content: oklch(98% 0.003 247.858);
    --color-secondary: oklch(66% 0.295 322.15);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: oklch(84% 0.143 164.978);
    --color-accent-content: oklch(26% 0.051 172.552);
    --color-neutral: oklch(27% 0.033 256.848);
    --color-neutral-content: oklch(98% 0.002 247.839);
    --color-info: oklch(68% 0.169 237.323);
    --color-info-content: oklch(97% 0.013 236.62);
    --color-success: oklch(77% 0.152 181.912);
    --color-success-content: oklch(98% 0.014 180.72);
    --color-warning: oklch(76% 0.188 70.08);
    --color-warning-content: oklch(98% 0.022 95.277);
    --color-error: oklch(63% 0.237 25.331);
    --color-error-content: oklch(97% 0.013 17.38);
    --radius-selector: 0.5rem;
    --radius-field: 0.5rem;
    --radius-box: 1rem;
    --size-selector: 0.28125rem;
    --size-field: 0.25rem;
    --border: 1.5px;
    --depth: 1;
    --noise: 0;
  }
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}


